#!/bin/bash
set -e

# Display usage information
if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    echo "PCILeech DMA Firmware Generator Container v2.0"
    echo "Usage: podman run --rm -it --cap-add=SYS_RAWIO --cap-add=SYS_ADMIN \\"
    echo "         --device=/dev/vfio/GROUP --device=/dev/vfio/vfio \\"
    echo "         -v ./output:/app/output dma-fw \\"
    echo "         sudo python3 /app/src/build.py [OPTIONS]"
    echo ""
    echo "Required arguments:"
    echo "  --bdf XXXX:XX:XX.X  PCI Bus:Device.Function (e.g., 0000:03:00.0)"
    echo "  --board XXt         Target board (35t, 75t, or 100t)"
    echo ""
    echo "Advanced SystemVerilog options:"
    echo "  --advanced-sv       Enable advanced SystemVerilog generation"
    echo "  --device-type TYPE  Device type optimization (network, storage, graphics)"
    echo "  --enable-variance   Enable manufacturing variance simulation"
    echo "  --disable-power-management  Disable power management features"
    echo "  --enable-debug      Enable debug features in generated code"
    echo "  --custom-config FILE  Use custom configuration file"
    echo ""
    echo "Basic examples:"
    echo "  # Standard firmware generation"
    echo "  sudo python3 /app/src/build.py --bdf 0000:03:00.0 --board 75t"
    echo ""
    echo "Advanced examples:"
    echo "  # Basic advanced generation"
    echo "  sudo python3 /app/src/build.py --bdf 0000:03:00.0 --board 75t --advanced-sv"
    echo ""
    echo "  # Device-specific with variance"
    echo "  sudo python3 /app/src/build.py --bdf 0000:03:00.0 --board 75t --advanced-sv --device-type network --enable-variance"
    echo ""
    echo "  # Custom configuration"
    echo "  sudo python3 /app/src/build.py --bdf 0000:03:00.0 --board 75t --advanced-sv --device-type storage --disable-power-management"
    echo ""
    echo "Kernel Module (donor_dump):"
    echo "  The donor_dump kernel module must be built on the host system:"
    echo "  1. Copy /app/src/donor_dump/ to host"
    echo "  2. Install kernel headers: apt-get install linux-headers-\$(uname -r)"
    echo "  3. Build module: cd donor_dump && make"
    echo "  4. Load module: sudo insmod donor_dump.ko bdf=XXXX:XX:XX.X"
    echo ""
    echo "Features:"
    echo "  - Basic PCILeech DMA firmware generation"
    echo "  - Advanced SystemVerilog code generation"
    echo "  - Manufacturing variance simulation"
    echo "  - Device-specific optimizations"
    echo "  - Power management controls"
    echo "  - Performance profiling and optimization"
    exit 0
fi

# Execute the command
exec "$@"