name: Consolidated CI

on:
  push:
  pull_request:
    branches:
    - main
  schedule:
    - cron: '0 3 * * 0'  # Run at 3:00 AM UTC every Sunday
  workflow_dispatch:  # Allow manual triggering

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write
  actions: read

env:
  NO_INTERACTIVE: '1'

jobs:
  template-validation:
    name: Template variable validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Python setup & deps
        uses: ./.github/actions/python-setup
        with:
          python-version: '3.11'
          requirements-files: 'requirements.txt'
          extra-packages: 'jinja2 pyyaml'
          editable: 'false'

      - name: Run template variable validation
        id: template-validation
        run: python scripts/validate_template_variables.py --verbose
        continue-on-error: true  # Continue workflow even if this step fails

      - name: Upload validation artifact
        uses: actions/upload-artifact@v4
        with:
          name: template-validation-report
          path: template_variables_report.json
          if-no-files-found: warn

  template-syntax:
    name: Template syntax validation
    runs-on: ubuntu-latest
    needs: template-validation
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Python setup & deps
        uses: ./.github/actions/python-setup
        with:
          python-version: '3.11'
          requirements-files: 'requirements.txt'
          extra-packages: 'jinja2 pyyaml'
          editable: 'true'

      - name: Validate template syntax
        run: python scripts/validate_template_syntax.py

  codeql-analysis:
    name: CodeQL
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Python setup & deps
        uses: ./.github/actions/python-setup
        with:
          python-version: '3.11'
          requirements-files: 'requirements.txt,requirements-dev.txt'
          editable: 'false'

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Run unit tests on supported Python versions (3.10 and newer)
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Python setup & deps
        uses: ./.github/actions/python-setup
        with:
          python-version: ${{ matrix.python-version }}
          requirements-files: 'requirements.txt,requirements-test.txt,requirements-tui.txt'
          extras: 'test'
          editable: 'true'
          skip-missing: 'true'

      - name: Run unit tests
        run: |
          pytest tests/ \
            --cov=src \
            --cov=generate \
            --cov-report=term-missing \
            --cov-report=xml:coverage.xml \
            --cov-report=html:htmlcov \
            --cov-fail-under=10 \
            --junit-xml=junit-unit.xml \
            -m "not hardware and not slow" \
            --tb=short \
            --verbose

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.11'
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.python-version }}
          path: |
            junit-unit.xml
            coverage.xml
            htmlcov/

  dependency-review:
    name: Dependency review
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, BSD-2-Clause, BSD-3-Clause, Apache-2.0, ISC, GPL-3.0

  packaging:
    name: Packaging
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: [codeql-analysis, unit-tests]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Python setup & deps (build)
        uses: ./.github/actions/python-setup
        with:
          python-version: '3.11'
          extra-packages: 'build setuptools setuptools_scm wheel twine'
          editable: 'false'

      - name: Build packages
        id: build-packages
        run: python -m build
        continue-on-error: false  # Fail the workflow if build fails

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-packages
          path: dist/

      - name: Build container image
        run: |
          docker build -t pcileech-fw-generator:ci -f Containerfile .

      - name: Smoke test container (imports)
        run: |
          docker run --rm pcileech-fw-generator:ci python3 -c "import sys; sys.path.append('/app/src'); import build; print('Import OK')"

      - name: Smoke test CLI help
        run: |
          docker run --rm pcileech-fw-generator:ci python3 /app/pcileech.py --help > /dev/null
