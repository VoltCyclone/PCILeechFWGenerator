{#- Device Configuration Module Template -#}
{{ header | safe }}

module device_config #(
    parameter VENDOR_ID = 16'h{{ "%04x" | format(vendor_id) }},
    parameter DEVICE_ID = 16'h{{ "%04x" | format(device_id) }},
    parameter CLASS_CODE = 24'h{{ "%06x" | format(class_code) }},
    parameter SUBSYSTEM_VENDOR_ID = 16'h{{ "%04x" | format(subsystem_vendor_id | default(vendor_id)) }},
    parameter SUBSYSTEM_DEVICE_ID = 16'h{{ "%04x" | format(subsystem_device_id | default(device_id)) }},
{%- for i in range(6) %}
    {%- if bars and bars[i] is defined %}
    parameter BAR{{ i }}_APERTURE = 32'h{{ "%08x" | format(bars[i].size if bars[i].size else 0) }}{{ "," if not loop.last else "" }}
    {%- else %}
    parameter BAR{{ i }}_APERTURE = 32'h00000000{{ "," if not loop.last else "" }}
    {%- endif %}
{%- endfor %}
) (
    // Configuration space interface
    output logic [31:0] cfg_device_id,
    output logic [31:0] cfg_class_code,
    output logic [31:0] cfg_subsystem_id,
    output logic [31:0] cfg_bar [0:5]
);

    // Device identification
    assign cfg_device_id = {DEVICE_ID, VENDOR_ID};
    assign cfg_class_code = {8'h00, CLASS_CODE};
    assign cfg_subsystem_id = {SUBSYSTEM_DEVICE_ID, SUBSYSTEM_VENDOR_ID};

    // BAR configuration
{%- for i in range(6) %}
    assign cfg_bar[{{ i }}] = BAR{{ i }}_APERTURE;
{%- endfor %}

endmodule