<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="257" skipped="20" tests="876" time="31.880" timestamp="2025-06-15T01:42:17.811906-04:00" hostname="Ramseys-MacBook-Pro.local"><testcase classname="tests.test_advanced_sv.TestPowerManagementGenerator" name="test_power_management_config_defaults" time="0.031"><failure message="AttributeError: 'PowerManagementConfig' object has no attribute 'supported_power_states'">tests/test_advanced_sv.py:37: in test_power_management_config_defaults
    assert PowerState.D0 in config.supported_power_states
E   AttributeError: 'PowerManagementConfig' object has no attribute 'supported_power_states'</failure></testcase><testcase classname="tests.test_advanced_sv.TestPowerManagementGenerator" name="test_power_management_generator_init" time="0.001"><failure message="TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'enable_clock_gating'">tests/test_advanced_sv.py:45: in test_power_management_generator_init
    config = PowerManagementConfig(enable_clock_gating=False)
E   TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'enable_clock_gating'</failure></testcase><testcase classname="tests.test_advanced_sv.TestPowerManagementGenerator" name="test_power_declarations_generation" time="0.006"><failure message="AssertionError: assert 'Power Management Signals' in '// ── Minimal Power Management Declarations ──────────────────────────────\n    // Power state tracking (simplified)\n    logic [1:0] current_power_state;  // 00=D0, 11=D3hot\n    logic       power_management_enabled;\n    \n    // PME (Power Management Event) signals    logic       pme_enable;\n    logic       pme_status;'">tests/test_advanced_sv.py:54: in test_power_declarations_generation
    assert "Power Management Signals" in declarations
E   AssertionError: assert 'Power Management Signals' in '// ── Minimal Power Management Declarations ──────────────────────────────\n    // Power state tracking (simplified)\n    logic [1:0] current_power_state;  // 00=D0, 11=D3hot\n    logic       power_management_enabled;\n    \n    // PME (Power Management Event) signals    logic       pme_enable;\n    logic       pme_status;'</failure></testcase><testcase classname="tests.test_advanced_sv.TestPowerManagementGenerator" name="test_power_state_machine_generation" time="0.001"><failure message="AttributeError: 'PowerManagementGenerator' object has no attribute 'generate_power_state_machine'">tests/test_advanced_sv.py:63: in test_power_state_machine_generation
    state_machine = generator.generate_power_state_machine()
E   AttributeError: 'PowerManagementGenerator' object has no attribute 'generate_power_state_machine'</failure></testcase><testcase classname="tests.test_advanced_sv.TestPowerManagementGenerator" name="test_link_state_machine_generation" time="0.001"><failure message="TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'enable_aspm'. Did you mean 'enable_pme'?">tests/test_advanced_sv.py:73: in test_link_state_machine_generation
    config = PowerManagementConfig(enable_aspm=True)
E   TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'enable_aspm'. Did you mean 'enable_pme'?</failure></testcase><testcase classname="tests.test_advanced_sv.TestPowerManagementGenerator" name="test_clock_gating_generation" time="0.001"><failure message="TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'enable_clock_gating'">tests/test_advanced_sv.py:84: in test_clock_gating_generation
    config = PowerManagementConfig(enable_clock_gating=True)
E   TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'enable_clock_gating'</failure></testcase><testcase classname="tests.test_advanced_sv.TestPowerManagementGenerator" name="test_disabled_features" time="0.001"><failure message="TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'supported_power_states'">tests/test_advanced_sv.py:94: in test_disabled_features
    config = PowerManagementConfig(
E   TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'supported_power_states'</failure></testcase><testcase classname="tests.test_advanced_sv.TestErrorHandlingGenerator" name="test_error_handling_config_defaults" time="0.001" /><testcase classname="tests.test_advanced_sv.TestErrorHandlingGenerator" name="test_error_declarations_generation" time="0.001" /><testcase classname="tests.test_advanced_sv.TestErrorHandlingGenerator" name="test_error_detection_generation" time="0.001" /><testcase classname="tests.test_advanced_sv.TestErrorHandlingGenerator" name="test_error_state_machine_generation" time="0.001" /><testcase classname="tests.test_advanced_sv.TestErrorHandlingGenerator" name="test_error_logging_generation" time="0.001" /><testcase classname="tests.test_advanced_sv.TestErrorHandlingGenerator" name="test_error_injection_generation" time="0.001" /><testcase classname="tests.test_advanced_sv.TestPerformanceCounterGenerator" name="test_perf_counter_config_defaults" time="0.001" /><testcase classname="tests.test_advanced_sv.TestPerformanceCounterGenerator" name="test_perf_declarations_generation" time="0.001"><failure message="AssertionError: assert 'Performance Counter Signals' in '    // Lightweight performance counter declarations\n    // See perf_stub module for implementation\n'">tests/test_advanced_sv.py:190: in test_perf_declarations_generation
    assert "Performance Counter Signals" in declarations
E   AssertionError: assert 'Performance Counter Signals' in '    // Lightweight performance counter declarations\n    // See perf_stub module for implementation\n'</failure></testcase><testcase classname="tests.test_advanced_sv.TestPerformanceCounterGenerator" name="test_transaction_counters_generation" time="0.001"><failure message="AssertionError: assert 'Transaction Counting Logic' in '    // Transaction counting implemented in perf_stub\n'">tests/test_advanced_sv.py:202: in test_transaction_counters_generation
    assert "Transaction Counting Logic" in counters
E   AssertionError: assert 'Transaction Counting Logic' in '    // Transaction counting implemented in perf_stub\n'</failure></testcase><testcase classname="tests.test_advanced_sv.TestPerformanceCounterGenerator" name="test_bandwidth_monitoring_generation" time="0.001"><failure message="AssertionError: assert 'Bandwidth Monitoring Logic' in '    // Bandwidth monitoring implemented in perf_stub\n'">tests/test_advanced_sv.py:212: in test_bandwidth_monitoring_generation
    assert "Bandwidth Monitoring Logic" in bandwidth
E   AssertionError: assert 'Bandwidth Monitoring Logic' in '    // Bandwidth monitoring implemented in perf_stub\n'</failure></testcase><testcase classname="tests.test_advanced_sv.TestPerformanceCounterGenerator" name="test_device_specific_counters" time="0.001"><failure message="AssertionError: assert 'Network Controller Performance Counters' in '    // Device-specific counters for network implemented in perf_stub\n'">tests/test_advanced_sv.py:223: in test_device_specific_counters
    assert "Network Controller Performance Counters" in network_counters
E   AssertionError: assert 'Network Controller Performance Counters' in '    // Device-specific counters for network implemented in perf_stub\n'</failure></testcase><testcase classname="tests.test_advanced_sv.TestPerformanceCounterGenerator" name="test_performance_grading_generation" time="0.001"><failure message="AssertionError: assert 'Performance Grading Logic' in '    // Performance grading implemented in perf_stub\n'">tests/test_advanced_sv.py:240: in test_performance_grading_generation
    assert "Performance Grading Logic" in grading
E   AssertionError: assert 'Performance Grading Logic' in '    // Performance grading implemented in perf_stub\n'</failure></testcase><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_advanced_sv_generator_init" time="0.001" /><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_module_header_generation" time="0.001" /><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_device_specific_ports" time="0.001" /><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_register_logic_generation" time="0.001" /><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_register_logic_with_variance" time="0.001" /><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_read_logic_generation" time="0.001" /><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_interrupt_logic_generation" time="0.001" /><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_complete_systemverilog_generation" time="0.003"><failure message="assert 'Power Management Signals' in '//==============================================================================\n// Advanced PCIe Device Controller with Comprehensive Features\n// Generator: AdvancedSVGenerator - Advanced SystemVerilog Generation Feature\n// Device Type: generic\n// Device Class: consumer\n// Features: Advanced power management (D0-D3, L0-L3 states), Comprehensive error handling and recovery, Hardware performance counters, Multiple clock domain support, Manufacturing variance integration\n//==============================================================================\n\n// State machine definitions\n`define S_SHADOW_CFGSPACE_IDLE  2\'b00\n`define S_SHADOW_CFGSPACE_TLP   2\'b01\n`define S_SHADOW_CFGSPACE_USB   2\'b10\n\nmodule advanced_pcileech_controller #(\n    parameter DEVICE_TYPE = &quot;generic&quot;,\n    parameter DEVICE_CLASS = &quot;consumer&quot;,\n    parameter MAX_PAYLOAD_SIZE = 256,\n    parameter MSI_VECTORS = 1,\n    parameter COUNTER_WIDTH = 32\n) (\n    // Clock and reset\n    input logic clk,\n    input logic reset_n,\n\n    // Additional clock domains\n    input logic mem_clk,\n    input logic aux_clk,\n\n    // PCIe interface\n    input logic [31:0] bar_addr,\n    input logic [31:0] bar_wr_d...  input logic src_valid,\n    output logic src_ready,\n    output logic [DATA_WIDTH-1:0] dst_data,\n    output logic dst_valid,\n    input logic dst_ready\n);\n\n    // Implementation of advanced clock domain crossing with variance compensation\n    logic [SYNC_STAGES-1:0] sync_reg;\n    logic [DATA_WIDTH-1:0] data_reg;\n    logic valid_reg;\n\n    // Source domain logic\n    always_ff @(posedge src_clk or negedge reset_n) begin\n        if (!reset_n) begin\n            data_reg &lt;= \'0;\n            valid_reg &lt;= 1\'b0;\n        end else if (src_valid &amp;&amp; src_ready) begin\n            data_reg &lt;= src_data;\n            valid_reg &lt;= 1\'b1;\n        end else if (sync_reg[SYNC_STAGES-1]) begin\n            valid_reg &lt;= 1\'b0;\n        end\n    end\n\n    // Destination domain synchronizer\n    always_ff @(posedge dst_clk or negedge reset_n) begin\n        if (!reset_n) begin\n            sync_reg &lt;= \'0;\n        end else begin\n            sync_reg &lt;= {sync_reg[SYNC_STAGES-2:0], valid_reg};\n        end\n    end\n\n    assign src_ready = !valid_reg || sync_reg[SYNC_STAGES-1];\n    assign dst_data = data_reg;\n    assign dst_valid = sync_reg[SYNC_STAGES-1] &amp;&amp; dst_ready;\n\nendmodule\n'">tests/test_advanced_sv.py:388: in test_complete_systemverilog_generation
    assert "Power Management Signals" in sv_content
E   assert 'Power Management Signals' in '//==============================================================================\n// Advanced PCIe Device Controller with Comprehensive Features\n// Generator: AdvancedSVGenerator - Advanced SystemVerilog Generation Feature\n// Device Type: generic\n// Device Class: consumer\n// Features: Advanced power management (D0-D3, L0-L3 states), Comprehensive error handling and recovery, Hardware performance counters, Multiple clock domain support, Manufacturing variance integration\n//==============================================================================\n\n// State machine definitions\n`define S_SHADOW_CFGSPACE_IDLE  2\'b00\n`define S_SHADOW_CFGSPACE_TLP   2\'b01\n`define S_SHADOW_CFGSPACE_USB   2\'b10\n\nmodule advanced_pcileech_controller #(\n    parameter DEVICE_TYPE = "generic",\n    parameter DEVICE_CLASS = "consumer",\n    parameter MAX_PAYLOAD_SIZE = 256,\n    parameter MSI_VECTORS = 1,\n    parameter COUNTER_WIDTH = 32\n) (\n    // Clock and reset\n    input logic clk,\n    input logic reset_n,\n\n    // Additional clock domains\n    input logic mem_clk,\n    input logic aux_clk,\n\n    // PCIe interface\n    input logic [31:0] bar_addr,\n    input logic [31:0] bar_wr_d...  input logic src_valid,\n    output logic src_ready,\n    output logic [DATA_WIDTH-1:0] dst_data,\n    output logic dst_valid,\n    input logic dst_ready\n);\n\n    // Implementation of advanced clock domain crossing with variance compensation\n    logic [SYNC_STAGES-1:0] sync_reg;\n    logic [DATA_WIDTH-1:0] data_reg;\n    logic valid_reg;\n\n    // Source domain logic\n    always_ff @(posedge src_clk or negedge reset_n) begin\n        if (!reset_n) begin\n            data_reg &lt;= \'0;\n            valid_reg &lt;= 1\'b0;\n        end else if (src_valid &amp;&amp; src_ready) begin\n            data_reg &lt;= src_data;\n            valid_reg &lt;= 1\'b1;\n        end else if (sync_reg[SYNC_STAGES-1]) begin\n            valid_reg &lt;= 1\'b0;\n        end\n    end\n\n    // Destination domain synchronizer\n    always_ff @(posedge dst_clk or negedge reset_n) begin\n        if (!reset_n) begin\n            sync_reg &lt;= \'0;\n        end else begin\n            sync_reg &lt;= {sync_reg[SYNC_STAGES-2:0], valid_reg};\n        end\n    end\n\n    assign src_ready = !valid_reg || sync_reg[SYNC_STAGES-1];\n    assign dst_data = data_reg;\n    assign dst_valid = sync_reg[SYNC_STAGES-1] &amp;&amp; dst_ready;\n\nendmodule\n'</failure></testcase><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_systemverilog_with_all_features" time="0.001"><failure message="TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'enable_clock_gating'">tests/test_advanced_sv.py:401: in test_systemverilog_with_all_features
    power_config = PowerManagementConfig(
E   TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'enable_clock_gating'</failure></testcase><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_generate_enhanced_build_integration" time="0.001"><failure message="assert 'from .systemverilog_generator import' in '\ndef build_advanced_sv(\n    regs: list,\n    target_src: pathlib.Path,\n    board_type: str = &quot;75t&quot;,\n    enable_variance: bool = True,\n    variance_metadata: Optional[dict] = None,\n    advanced_features: Optional[dict] = None,\n) -&gt; None:\n    &quot;&quot;&quot;Generate advanced SystemVerilog BAR controller with comprehensive features.&quot;&quot;&quot;\n\n    # Import classes from this module (they\'re defined above)\n    # AdvancedSVGenerator, PowerManagementConfig, etc. are already available\n\n    # Configure advanced features based on board type and requirements\n    board_config = BOARD_INFO.get(board_type, BOARD_INFO[&quot;75t&quot;])\n    device_class_str = board_config.get(&quot;device_class&quot;, &quot;consumer&quot;)\n    base_freq = board_config.get(&quot;base_frequency_mhz&quot;, 100.0)\n\n    # Map string to DeviceClass enum\n    device_class_map = {\n        &quot;consumer&quot;: DeviceClass.CONSUMER,\n        &quot;enterprise&quot;: DeviceClass.ENTERPRISE,\n        &quot;industrial&quot;: DeviceClass.INDUSTRIAL,\n        &quot;automotive&quot;: DeviceClass.AUTOMOTIVE,\n    }\n    device_class = device_class_map.get(device_class_str, DeviceClass.CONSUMER)\n\n    # Configure advanced features\n    power_config = PowerManagementConfig(\n        enable_clock_gating=Tru...rianceSimulator()\n        device_id = variance_metadata.get(&quot;device_id&quot;, f&quot;board_{board_type}&quot;) if variance_metadata else f&quot;board_{board_type}&quot;\n        variance_model = variance_simulator.generate_variance_model(\n            device_id=device_id,\n            device_class=device_class,\n            base_frequency_mhz=base_freq\n        )\n        print(f&quot;[*] Advanced variance simulation enabled for {device_class.value} class device&quot;)\n\n    # Generate advanced SystemVerilog\n    generator = AdvancedSVGenerator(power_config, error_config, perf_config, device_config)\n    sv_content = generator.generate_advanced_systemverilog(regs, variance_model)\n\n    # Write to output and target locations\n    (OUT / &quot;advanced_bar_controller.sv&quot;).write_text(sv_content)\n    shutil.copyfile(OUT / &quot;advanced_bar_controller.sv&quot;, target_src)\n\n    print(&quot;[*] Advanced SystemVerilog generation complete!&quot;)\n    print(f&quot;    - Power management: {power_config.enable_clock_gating}&quot;)\n    print(f&quot;    - Error handling: {error_config.enable_auto_retry}&quot;)\n    print(f&quot;    - Performance counters: {perf_config.enable_transaction_counters}&quot;)\n    print(f&quot;    - Device type: {device_config.device_type.value}&quot;)\n'">tests/test_advanced_sv.py:461: in test_generate_enhanced_build_integration
    assert "from .systemverilog_generator import" in integration_code
E   assert 'from .systemverilog_generator import' in '\ndef build_advanced_sv(\n    regs: list,\n    target_src: pathlib.Path,\n    board_type: str = "75t",\n    enable_variance: bool = True,\n    variance_metadata: Optional[dict] = None,\n    advanced_features: Optional[dict] = None,\n) -&gt; None:\n    """Generate advanced SystemVerilog BAR controller with comprehensive features."""\n\n    # Import classes from this module (they\'re defined above)\n    # AdvancedSVGenerator, PowerManagementConfig, etc. are already available\n\n    # Configure advanced features based on board type and requirements\n    board_config = BOARD_INFO.get(board_type, BOARD_INFO["75t"])\n    device_class_str = board_config.get("device_class", "consumer")\n    base_freq = board_config.get("base_frequency_mhz", 100.0)\n\n    # Map string to DeviceClass enum\n    device_class_map = {\n        "consumer": DeviceClass.CONSUMER,\n        "enterprise": DeviceClass.ENTERPRISE,\n        "industrial": DeviceClass.INDUSTRIAL,\n        "automotive": DeviceClass.AUTOMOTIVE,\n    }\n    device_class = device_class_map.get(device_class_str, DeviceClass.CONSUMER)\n\n    # Configure advanced features\n    power_config = PowerManagementConfig(\n        enable_clock_gating=Tru...rianceSimulator()\n        device_id = variance_metadata.get("device_id", f"board_{board_type}") if variance_metadata else f"board_{board_type}"\n        variance_model = variance_simulator.generate_variance_model(\n            device_id=device_id,\n            device_class=device_class,\n            base_frequency_mhz=base_freq\n        )\n        print(f"[*] Advanced variance simulation enabled for {device_class.value} class device")\n\n    # Generate advanced SystemVerilog\n    generator = AdvancedSVGenerator(power_config, error_config, perf_config, device_config)\n    sv_content = generator.generate_advanced_systemverilog(regs, variance_model)\n\n    # Write to output and target locations\n    (OUT / "advanced_bar_controller.sv").write_text(sv_content)\n    shutil.copyfile(OUT / "advanced_bar_controller.sv", target_src)\n\n    print("[*] Advanced SystemVerilog generation complete!")\n    print(f"    - Power management: {power_config.enable_clock_gating}")\n    print(f"    - Error handling: {error_config.enable_auto_retry}")\n    print(f"    - Performance counters: {perf_config.enable_transaction_counters}")\n    print(f"    - Device type: {device_config.device_type.value}")\n'</failure></testcase><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_register_logic_with_special_names" time="0.001" /><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_clock_domain_logic_with_variance" time="0.001" /><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_device_type_class_combinations" time="0.001" /><testcase classname="tests.test_advanced_sv.TestAdvancedSVGenerator" name="test_register_logic_with_invalid_values" time="0.001" /><testcase classname="tests.test_advanced_sv.TestIntegration" name="test_file_generation" time="0.004" /><testcase classname="tests.test_advanced_sv.TestIntegration" name="test_variance_integration" time="0.003" /><testcase classname="tests.test_advanced_sv.TestDeviceSpecificLogic" name="test_device_specific_logic_defaults" time="0.001" /><testcase classname="tests.test_advanced_sv.TestDeviceSpecificLogic" name="test_device_specific_logic_custom_values" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestDataClasses" name="test_register_access_creation" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestDataClasses" name="test_register_access_optional_fields" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestDataClasses" name="test_timing_pattern_creation" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestDataClasses" name="test_behavior_profile_creation" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestBehaviorProfilerInitialization" name="test_valid_bdf_initialization" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestBehaviorProfilerInitialization" name="test_invalid_bdf_initialization" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestBehaviorProfilerInitialization" name="test_default_parameters" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestLogging" name="test_debug_logging_enabled" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestLogging" name="test_debug_logging_disabled" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestMonitoringSetup" name="test_setup_monitoring_success" time="0.006" /><testcase classname="tests.test_behavior_profiler.TestMonitoringSetup" name="test_setup_monitoring_device_not_found" time="0.002" /><testcase classname="tests.test_behavior_profiler.TestMonitoringSetup" name="test_setup_monitoring_command_failure" time="0.002" /><testcase classname="tests.test_behavior_profiler.TestBehaviorCapture" name="test_capture_behavior_profile_success" time="0.000"><skipped type="pytest.skip" message="Test requires Linux with ftrace support">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_behavior_profiler.py:185: Test requires Linux with ftrace support</skipped></testcase><testcase classname="tests.test_behavior_profiler.TestBehaviorCapture" name="test_capture_behavior_profile_setup_failure" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestBehaviorCapture" name="test_capture_behavior_profile_with_duration" time="0.000"><skipped type="pytest.skip" message="Test requires Linux with ftrace support">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_behavior_profiler.py:253: Test requires Linux with ftrace support</skipped></testcase><testcase classname="tests.test_behavior_profiler.TestPatternAnalysis" name="test_analyze_patterns_basic" time="0.002" /><testcase classname="tests.test_behavior_profiler.TestPatternAnalysis" name="test_analyze_patterns_empty_profile" time="0.002" /><testcase classname="tests.test_behavior_profiler.TestPatternAnalysis" name="test_analyze_patterns_single_register" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestTimingPatternDetection" name="test_detect_periodic_patterns" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestTimingPatternDetection" name="test_detect_burst_patterns" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestTimingPatternDetection" name="test_detect_irregular_patterns" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestStateTransitionAnalysis" name="test_analyze_state_transitions_simple" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestStateTransitionAnalysis" name="test_analyze_state_transitions_empty" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestInterruptPatternAnalysis" name="test_analyze_interrupt_patterns_success" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestInterruptPatternAnalysis" name="test_analyze_interrupt_patterns_failure" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestMonitoringThreads" name="test_start_stop_monitoring" time="0.002" /><testcase classname="tests.test_behavior_profiler.TestMonitoringThreads" name="test_monitor_device_access_mock" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestErrorHandling" name="test_invalid_duration" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestErrorHandling" name="test_monitoring_already_active" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestErrorHandling" name="test_stop_monitoring_not_active" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestErrorHandling" name="test_queue_overflow_handling" time="0.003" /><testcase classname="tests.test_behavior_profiler.TestPerformanceCharacteristics" name="test_large_dataset_analysis_performance" time="0.020" /><testcase classname="tests.test_behavior_profiler.TestPerformanceCharacteristics" name="test_memory_usage_optimization" time="0.089" /><testcase classname="tests.test_behavior_profiler.TestIntegrationWithBuildSystem" name="test_profile_data_serialization" time="0.001"><failure message="KeyError: 'device_bd'">tests/test_behavior_profiler.py:754: in test_profile_data_serialization
    assert loaded_dict["device_bd"] == profile.device_bdf
E   KeyError: 'device_bd'</failure></testcase><testcase classname="tests.test_behavior_profiler.TestIntegrationWithBuildSystem" name="test_enhanced_register_context_generation" time="0.001" /><testcase classname="tests.test_behavior_profiler.TestIntegrationWithBuildSystem" name="test_build_system_compatibility" time="0.001" /><testcase classname="tests.test_build.TestSecurityAndTempFiles" name="test_create_secure_tempfile_success" time="0.001" /><testcase classname="tests.test_build.TestSecurityAndTempFiles" name="test_create_secure_tempfile_error_cleanup" time="0.001"><failure message="Failed: DID NOT RAISE &lt;class 'OSError'&gt;">tests/test_build.py:83: in test_create_secure_tempfile_error_cleanup
    with pytest.raises(OSError):
E   Failed: DID NOT RAISE &lt;class 'OSError'&gt;</failure></testcase><testcase classname="tests.test_build.TestDonorInfoExtraction" name="test_get_donor_info_success" time="0.001"><failure message="ModuleNotFoundError: No module named 'build_compat'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1479: in __enter__
    self.target = self.getter()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pkgutil.py:513: in resolve_name
    mod = importlib.import_module(modname)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
E   ModuleNotFoundError: No module named 'build_compat'</failure></testcase><testcase classname="tests.test_build.TestDonorInfoExtraction" name="test_get_donor_info_missing_fields" time="0.001"><failure message="ModuleNotFoundError: No module named 'build_compat'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1479: in __enter__
    self.target = self.getter()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pkgutil.py:513: in resolve_name
    mod = importlib.import_module(modname)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
E   ModuleNotFoundError: No module named 'build_compat'</failure></testcase><testcase classname="tests.test_build.TestDonorInfoExtraction" name="test_get_donor_info_malformed_output" time="0.001"><failure message="ModuleNotFoundError: No module named 'build_compat'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1479: in __enter__
    self.target = self.getter()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/pkgutil.py:513: in resolve_name
    mod = importlib.import_module(modname)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/importlib/__init__.py:88: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
E   ModuleNotFoundError: No module named 'build_compat'</failure></testcase><testcase classname="tests.test_build.TestDriverRegisterScraping" name="test_scrape_driver_regs_success" time="0.001"><failure message="AssertionError: assert 3 == 2&#10; +  where 3 = len([{'access': 'RW', 'name': 'CTRL', 'offset': 0, 'value': 305419896}, {'access': 'RO', 'name': 'STATUS', 'offset': 4, 'value': 2271560481}, {'access': 'RW', 'name': 'CONFIG', 'offset': 8, 'value': 2882400000}])">tests/test_build.py:171: in test_scrape_driver_regs_success
    assert len(regs) == 2
E   AssertionError: assert 3 == 2
E    +  where 3 = len([{'access': 'RW', 'name': 'CTRL', 'offset': 0, 'value': 305419896}, {'access': 'RO', 'name': 'STATUS', 'offset': 4, 'value': 2271560481}, {'access': 'RW', 'name': 'CONFIG', 'offset': 8, 'value': 2882400000}])</failure></testcase><testcase classname="tests.test_build.TestDriverRegisterScraping" name="test_scrape_driver_regs_command_failure" time="0.088"><failure message="AssertionError: assert [{'access': '...: 2882400000}] == []&#10;  &#10;  Left contains 3 more items, first extra item: #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33maccess#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[33m'#x1B[39;49;00m#x1B[33mRW#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mname#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[33m'#x1B[39;49;00m#x1B[33mCTRL#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33moffset#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94m0#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mvalue#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94m305419896#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[91m- []#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ [#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+     {#x1B[39;49;00m#x1B[90m#x1B[39;49;00m...&#10;  &#10;  ...Full output truncated (18 lines hidden), use '-vv' to show">tests/test_build.py:190: in test_scrape_driver_regs_command_failure
    assert regs == []
E   AssertionError: assert [{'access': '...: 2882400000}] == []
E     
E     Left contains 3 more items, first extra item: #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33maccess#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[33m'#x1B[39;49;00m#x1B[33mRW#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mname#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[33m'#x1B[39;49;00m#x1B[33mCTRL#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33moffset#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94m0#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mvalue#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94m305419896#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[91m- []#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ [#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+     {#x1B[39;49;00m#x1B[90m#x1B[39;49;00m...
E     
E     ...Full output truncated (18 lines hidden), use '-vv' to show</failure></testcase><testcase classname="tests.test_build.TestDriverRegisterScraping" name="test_scrape_driver_regs_invalid_json" time="0.001"><failure message="AssertionError: assert [{'access': '...: 2882400000}] == []&#10;  &#10;  Left contains 3 more items, first extra item: #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33maccess#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[33m'#x1B[39;49;00m#x1B[33mRW#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mname#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[33m'#x1B[39;49;00m#x1B[33mCTRL#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33moffset#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94m0#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mvalue#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94m305419896#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[91m- []#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ [#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+     {#x1B[39;49;00m#x1B[90m#x1B[39;49;00m...&#10;  &#10;  ...Full output truncated (18 lines hidden), use '-vv' to show">tests/test_build.py:200: in test_scrape_driver_regs_invalid_json
    assert regs == []
E   AssertionError: assert [{'access': '...: 2882400000}] == []
E     
E     Left contains 3 more items, first extra item: #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33maccess#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[33m'#x1B[39;49;00m#x1B[33mRW#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mname#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[33m'#x1B[39;49;00m#x1B[33mCTRL#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33moffset#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94m0#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mvalue#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94m305419896#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[91m- []#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ [#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+     {#x1B[39;49;00m#x1B[90m#x1B[39;49;00m...
E     
E     ...Full output truncated (18 lines hidden), use '-vv' to show</failure></testcase><testcase classname="tests.test_build.TestBehaviorProfiling" name="test_integrate_behavior_profile_success" time="0.001"><failure message="AssertionError: assert 'behavioral_timing' in {'access_pattern': 'write_then_read', 'dependencies': ['reg_status'], 'function': 'init_device', 'sequences': [{'function': 'init_device', 'operation': 'write', 'position': 0, 'total_ops': 3}], ...}">tests/test_build.py:234: in test_integrate_behavior_profile_success
    assert "behavioral_timing" in enhanced_regs[0]["context"]
E   AssertionError: assert 'behavioral_timing' in {'access_pattern': 'write_then_read', 'dependencies': ['reg_status'], 'function': 'init_device', 'sequences': [{'function': 'init_device', 'operation': 'write', 'position': 0, 'total_ops': 3}], ...}</failure></testcase><testcase classname="tests.test_build.TestBehaviorProfiling" name="test_integrate_behavior_profile_import_error" time="0.001"><failure message="AssertionError: assert [{'context': ...': 'ro', ...}] == [{'context': ...': 'ro', ...}]&#10;  &#10;  (pytest_assertion plugin: representation of details failed: /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1226: ImportError: Module not found.&#10;   Probably an object has a faulty __repr__.)">tests/test_build.py:251: in test_integrate_behavior_profile_import_error
    assert enhanced_regs == mock_register_data
E   AssertionError: assert [{'context': ...': 'ro', ...}] == [{'context': ...': 'ro', ...}]
E     
E     (pytest_assertion plugin: representation of details failed: /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1226: ImportError: Module not found.
E      Probably an object has a faulty __repr__.)</failure></testcase><testcase classname="tests.test_build.TestBehaviorProfiling" name="test_integrate_behavior_profile_profiling_error" time="0.001"><failure message="AssertionError: assert [{'context': ...': 'ro', ...}] == [{'context': ...': 'ro', ...}]&#10;  &#10;  (pytest_assertion plugin: representation of details failed: /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/assertion/util.py:249: TypeError: isinstance() arg 2 must be a type, a tuple of types, or a union.&#10;   Probably an object has a faulty __repr__.)">tests/test_build.py:274: in test_integrate_behavior_profile_profiling_error
    assert enhanced_regs == mock_register_data
E   AssertionError: assert [{'context': ...': 'ro', ...}] == [{'context': ...': 'ro', ...}]
E     
E     (pytest_assertion plugin: representation of details failed: /Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/assertion/util.py:249: TypeError: isinstance() arg 2 must be a type, a tuple of types, or a union.
E      Probably an object has a faulty __repr__.)</failure></testcase><testcase classname="tests.test_build.TestSystemVerilogGeneration" name="test_build_sv_success" time="0.009"><failure message="AssertionError: assert 'module pcileech_tlps128_bar_controller' in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'">tests/test_build.py:290: in test_build_sv_success
    assert "module pcileech_tlps128_bar_controller" in sv_content
E   AssertionError: assert 'module pcileech_tlps128_bar_controller' in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'</failure></testcase><testcase classname="tests.test_build.TestSystemVerilogGeneration" name="test_build_sv_no_registers" time="0.005"><failure message="AssertionError: assert 'device_control_reg' in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'">tests/test_build.py:320: in test_build_sv_no_registers
    assert "device_control_reg" in sv_content
E   AssertionError: assert 'device_control_reg' in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'</failure></testcase><testcase classname="tests.test_build.TestSystemVerilogGeneration" name="test_build_sv_complex_timing" time="0.005"><failure message="AssertionError: assert 'reg_complex_delay_counter' in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'">tests/test_build.py:351: in test_build_sv_complex_timing
    assert "reg_complex_delay_counter" in sv_content
E   AssertionError: assert 'reg_complex_delay_counter' in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'</failure></testcase><testcase classname="tests.test_build.TestStateMachineGeneration" name="test_generate_register_state_machine_simple" time="0.001"><failure message="AssertionError: assert 'test_reg_state_0' in {'base_offset': 1024, 'initial_state': 'STATE_0', 'register': 'test_reg', 'sequences': [{'function': 'init', 'operation': 'write', 'position': 0}, {'function': 'init', 'operation': 'read', 'position': 1}], ...}">tests/test_build.py:373: in test_generate_register_state_machine_simple
    assert "test_reg_state_0" in state_machine
E   AssertionError: assert 'test_reg_state_0' in {'base_offset': 1024, 'initial_state': 'STATE_0', 'register': 'test_reg', 'sequences': [{'function': 'init', 'operation': 'write', 'position': 0}, {'function': 'init', 'operation': 'read', 'position': 1}], ...}</failure></testcase><testcase classname="tests.test_build.TestStateMachineGeneration" name="test_generate_register_state_machine_insufficient_sequences" time="0.001"><failure message="AssertionError: assert {} == ''">tests/test_build.py:385: in test_generate_register_state_machine_insufficient_sequences
    assert state_machine == ""
E   AssertionError: assert {} == ''</failure></testcase><testcase classname="tests.test_build.TestStateMachineGeneration" name="test_generate_device_state_machine" time="0.001"><failure message="AssertionError: assert 'DEVICE_RESET' in {'device_states': ['INIT', 'READY', 'ACTIVE', 'ERROR'], 'register_count': 2, 'registers': ['reg_ctrl', 'reg_status'], 'state_transitions': [{'from': 'INIT', 'to': 'READY', 'trigger': 'initialization_complete'}, {'from': 'READY', 'to': 'ACTIVE', 'trigger': 'operation_start'}, {'from': 'ACTIVE', 'to': 'READY', 'trigger': 'operation_complete'}, {'from': '*', 'to': 'ERROR', 'trigger': 'error_condition'}]}">tests/test_build.py:391: in test_generate_device_state_machine
    assert "DEVICE_RESET" in state_machine
E   AssertionError: assert 'DEVICE_RESET' in {'device_states': ['INIT', 'READY', 'ACTIVE', 'ERROR'], 'register_count': 2, 'registers': ['reg_ctrl', 'reg_status'], 'state_transitions': [{'from': 'INIT', 'to': 'READY', 'trigger': 'initialization_complete'}, {'from': 'READY', 'to': 'ACTIVE', 'trigger': 'operation_start'}, {'from': 'ACTIVE', 'to': 'READY', 'trigger': 'operation_complete'}, {'from': '*', 'to': 'ERROR', 'trigger': 'error_condition'}]}</failure></testcase><testcase classname="tests.test_build.TestStateMachineGeneration" name="test_generate_device_state_machine_empty_regs" time="0.001"><failure message="AssertionError: assert 'DEVICE_RESET' in {'registers': [], 'states': ['IDLE']}">tests/test_build.py:405: in test_generate_device_state_machine_empty_regs
    assert "DEVICE_RESET" in state_machine
E   AssertionError: assert 'DEVICE_RESET' in {'registers': [], 'states': ['IDLE']}</failure></testcase><testcase classname="tests.test_build.TestTCLGeneration" name="test_code_from_bytes_valid" time="0.001" /><testcase classname="tests.test_build.TestTCLGeneration" name="test_code_from_bytes_invalid" time="0.001" /><testcase classname="tests.test_build.TestTCLGeneration" name="test_build_tcl_success" time="0.012"><failure message="AssertionError: assert '0x8086' in '# Project Setup TCL - Generated for pcileech_35t325_x4\ncreate_project pcileech_firmware ./vivado_project -part xc7a35tcsg324-2 -force\nset_property target_language Verilog [current_project]\nset_property default_lib xil_defaultlib [current_project]\n'">tests/test_build.py:431: in test_build_tcl_success
    assert mock_donor_info["vendor_id"] in tcl_content
E   AssertionError: assert '0x8086' in '# Project Setup TCL - Generated for pcileech_35t325_x4\ncreate_project pcileech_firmware ./vivado_project -part xc7a35tcsg324-2 -force\nset_property target_language Verilog [current_project]\nset_property default_lib xil_defaultlib [current_project]\n'</failure></testcase><testcase classname="tests.test_build.TestTCLGeneration" name="test_build_tcl_unsupported_bar_size" time="0.009"><failure message="AssertionError: assert '128K' in '# Project Setup TCL - Generated for pcileech_35t325_x4\ncreate_project pcileech_firmware ./vivado_project -part xc7a35tcsg324-2 -force\nset_property target_language Verilog [current_project]\nset_property default_lib xil_defaultlib [current_project]\n'">tests/test_build.py:454: in test_build_tcl_unsupported_bar_size
    assert "128K" in tcl_content
E   AssertionError: assert '128K' in '# Project Setup TCL - Generated for pcileech_35t325_x4\ncreate_project pcileech_firmware ./vivado_project -part xc7a35tcsg324-2 -force\nset_property target_language Verilog [current_project]\nset_property default_lib xil_defaultlib [current_project]\n'</failure></testcase><testcase classname="tests.test_build.TestBoardConfiguration" name="test_board_info_constants" time="0.001"><failure message="AssertionError: assert 'gen' in {'root': 'xc7a35tcsg324-2'}">tests/test_build.py:484: in test_board_info_constants
    assert "gen" in info
E   AssertionError: assert 'gen' in {'root': 'xc7a35tcsg324-2'}</failure></testcase><testcase classname="tests.test_build.TestBoardConfiguration" name="test_aperture_constants" time="0.001" /><testcase classname="tests.test_build.TestUtilityFunctions" name="test_run_command_success" time="0.002"><failure message="AssertionError: expected call not found.&#10;Expected: run('echo test', shell=True, check=True)&#10;  Actual: run('echo test', shell=True, check=True, capture_output=True, text=True)&#10;&#10;pytest introspection follows:&#10;&#10;Kwargs:&#10;assert {'capture_out... 'text': True} == {'check': True, 'shell': True}&#10;  &#10;  Omitting 2 identical items, use -vv to show&#10;  Left contains 2 more items:&#10;  #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33mcapture_output#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94mTrue#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mtext#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94mTrue#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[90m #x1B[39;49;00m {#x1B[90m#x1B[39;49;00m...&#10;  &#10;  ...Full output truncated (5 lines hidden), use '-vv' to show">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:977: in assert_called_with
    raise AssertionError(_error_message()) from cause
E   AssertionError: expected call not found.
E   Expected: run('echo test', shell=True, check=True)
E     Actual: run('echo test', shell=True, check=True, capture_output=True, text=True)

During handling of the above exception, another exception occurred:
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:989: in assert_called_once_with
    return self.assert_called_with(*args, **kwargs)
E   AssertionError: expected call not found.
E   Expected: run('echo test', shell=True, check=True)
E     Actual: run('echo test', shell=True, check=True, capture_output=True, text=True)
E   
E   pytest introspection follows:
E   
E   Kwargs:
E   assert {'capture_out... 'text': True} == {'check': True, 'shell': True}
E     
E     Omitting 2 identical items, use -vv to show
E     Left contains 2 more items:
E     #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33mcapture_output#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94mTrue#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mtext#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94mTrue#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[90m #x1B[39;49;00m {#x1B[90m#x1B[39;49;00m...
E     
E     ...Full output truncated (5 lines hidden), use '-vv' to show

During handling of the above exception, another exception occurred:
tests/test_build.py:508: in test_run_command_success
    mock_run.assert_called_once_with("echo test", shell=True, check=True)
E   AssertionError: expected call not found.
E   Expected: run('echo test', shell=True, check=True)
E     Actual: run('echo test', shell=True, check=True, capture_output=True, text=True)
E   
E   pytest introspection follows:
E   
E   Kwargs:
E   assert {'capture_out... 'text': True} == {'check': True, 'shell': True}
E     
E     Omitting 2 identical items, use -vv to show
E     Left contains 2 more items:
E     #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33mcapture_output#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94mTrue#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mtext#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94mTrue#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[90m #x1B[39;49;00m {#x1B[90m#x1B[39;49;00m...
E     
E     ...Full output truncated (5 lines hidden), use '-vv' to show</failure></testcase><testcase classname="tests.test_build.TestUtilityFunctions" name="test_run_command_failure" time="0.001" /><testcase classname="tests.test_build.TestIntegrationScenarios" name="test_full_build_workflow" time="0.001"><failure message="AttributeError: &lt;module 'build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'get_donor_info'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'get_donor_info'</failure></testcase><testcase classname="tests.test_build.TestErrorHandlingAndEdgeCases" name="test_empty_register_list_handling" time="0.005"><failure message="AssertionError: assert 'device_control_reg' in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'">tests/test_build.py:582: in test_empty_register_list_handling
    assert "device_control_reg" in sv_content
E   AssertionError: assert 'device_control_reg' in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'</failure></testcase><testcase classname="tests.test_build.TestErrorHandlingAndEdgeCases" name="test_malformed_register_data" time="0.005"><failure message="Failed: DID NOT RAISE (&lt;class 'ValueError'&gt;, &lt;class 'TypeError'&gt;)">tests/test_build.py:596: in test_malformed_register_data
    with pytest.raises((ValueError, TypeError)):
E   Failed: DID NOT RAISE (&lt;class 'ValueError'&gt;, &lt;class 'TypeError'&gt;)</failure></testcase><testcase classname="tests.test_build.TestErrorHandlingAndEdgeCases" name="test_missing_context_data" time="0.005" /><testcase classname="tests.test_build.TestPerformanceAndScaling" name="test_large_register_set_generation" time="0.006" /><testcase classname="tests.test_build.TestPerformanceAndScaling" name="test_memory_usage_with_large_datasets" time="0.035" /><testcase classname="tests.test_build.TestRegressionPrevention" name="test_register_offset_formatting" time="0.005"><failure message="assert &quot;32'h00000400&quot; in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'">tests/test_build.py:693: in test_register_offset_formatting
    assert "32'h00000400" in sv_content
E   assert "32'h00000400" in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'</failure></testcase><testcase classname="tests.test_build.TestRegressionPrevention" name="test_special_character_handling_in_names" time="0.005"><failure message="AssertionError: assert 'reg_with_underscores_123_reg' in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'">tests/test_build.py:713: in test_special_character_handling_in_names
    assert "reg_with_underscores_123_reg" in sv_content
E   AssertionError: assert 'reg_with_underscores_123_reg' in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'</failure></testcase><testcase classname="tests.test_build.TestRegressionPrevention" name="test_timing_calculation_edge_cases" time="0.005"><failure message="AssertionError: assert 'zero_delay_reg_delay_counter &lt;= 1' in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'">tests/test_build.py:746: in test_timing_calculation_edge_cases
    assert "zero_delay_reg_delay_counter &lt;= 1" in sv_content
E   AssertionError: assert 'zero_delay_reg_delay_counter &lt;= 1' in '// Minimal SystemVerilog fallback\nmodule pcileech_controller (\n    input wire clk,\n    input wire rst\n);\nendmodule\n'</failure></testcase><testcase classname="tests.test_build.TestRefactoredBuildSystem" name="test_template_based_tcl_generation" time="0.001" /><testcase classname="tests.test_build.TestRefactoredBuildSystem" name="test_backward_compatibility_api" time="0.001"><failure message="AssertionError: assert False&#10; +  where False = hasattr(build, 'get_donor_info')">tests/test_build.py:801: in test_backward_compatibility_api
    assert hasattr(build, "get_donor_info")
E   AssertionError: assert False
E    +  where False = hasattr(build, 'get_donor_info')</failure></testcase><testcase classname="tests.test_build.TestRefactoredBuildSystem" name="test_safe_import_integration" time="0.001" /><testcase classname="tests.test_build.TestRefactoredBuildSystem" name="test_template_vs_legacy_output_equivalence" time="0.010" /><testcase classname="tests.test_build.TestRefactoredBuildSystem" name="test_fpga_strategy_integration" time="0.001"><failure message="AttributeError: &lt;module 'build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'select_pcie_ip_core'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'select_pcie_ip_core'</failure></testcase><testcase classname="tests.test_build.TestRefactoredBuildSystem" name="test_constants_integration" time="0.001" /><testcase classname="tests.test_build.TestRefactoredBuildSystem" name="test_helper_function_integration" time="0.001" /><testcase classname="tests.test_build.TestRefactoredBuildSystem" name="test_error_handling_with_refactored_components" time="0.001" /><testcase classname="tests.test_build.TestPerformanceComparison" name="test_tcl_generation_performance" time="0.080" /><testcase classname="tests.test_build.TestPerformanceComparison" name="test_memory_usage_comparison" time="0.803" /><testcase classname="tests.test_build.TestMigrationCompatibility" name="test_gradual_migration_support" time="0.001" /><testcase classname="tests.test_build.TestMigrationCompatibility" name="test_configuration_migration" time="0.001" /><testcase classname="tests.test_build.TestMigrationCompatibility" name="test_api_consistency" time="0.009" /><testcase classname="tests.test_build_helpers.TestSafeImportWithFallback" name="test_successful_primary_import" time="0.001" /><testcase classname="tests.test_build_helpers.TestSafeImportWithFallback" name="test_fallback_import_success" time="0.001" /><testcase classname="tests.test_build_helpers.TestSafeImportWithFallback" name="test_both_imports_fail_with_fallback_value" time="0.001" /><testcase classname="tests.test_build_helpers.TestSafeImportWithFallback" name="test_both_imports_fail_no_fallback_value" time="0.001" /><testcase classname="tests.test_build_helpers.TestSafeImportWithFallback" name="test_simple_module_import" time="0.001" /><testcase classname="tests.test_build_helpers.TestSafeImportWithFallback" name="test_multiple_imports" time="0.001" /><testcase classname="tests.test_build_helpers.TestSafeImportWithFallback" name="test_empty_imports" time="0.001" /><testcase classname="tests.test_build_helpers.TestSafeImportWithFallback" name="test_none_fallback_parameters" time="0.001" /><testcase classname="tests.test_build_helpers.TestSelectPcieIpCore" name="test_artix7_35t_selection" time="0.001" /><testcase classname="tests.test_build_helpers.TestSelectPcieIpCore" name="test_artix7_75t_selection" time="0.001" /><testcase classname="tests.test_build_helpers.TestSelectPcieIpCore" name="test_kintex7_selection" time="0.001" /><testcase classname="tests.test_build_helpers.TestSelectPcieIpCore" name="test_zynq_ultrascale_selection" time="0.001" /><testcase classname="tests.test_build_helpers.TestSelectPcieIpCore" name="test_unknown_part_default" time="0.001" /><testcase classname="tests.test_build_helpers.TestWriteTclFileWithLogging" name="test_successful_file_write" time="0.001" /><testcase classname="tests.test_build_helpers.TestWriteTclFileWithLogging" name="test_create_parent_directories" time="0.001" /><testcase classname="tests.test_build_helpers.TestWriteTclFileWithLogging" name="test_custom_logger" time="0.001" /><testcase classname="tests.test_build_helpers.TestWriteTclFileWithLogging" name="test_file_write_error" time="0.002" /><testcase classname="tests.test_build_helpers.TestWriteTclFileWithLogging" name="test_string_path_input" time="0.001" /><testcase classname="tests.test_build_helpers.TestFpgaStrategySelector" name="test_artix7_35t_strategy" time="0.001" /><testcase classname="tests.test_build_helpers.TestFpgaStrategySelector" name="test_artix7_75t_strategy" time="0.001" /><testcase classname="tests.test_build_helpers.TestFpgaStrategySelector" name="test_kintex7_strategy" time="0.001" /><testcase classname="tests.test_build_helpers.TestFpgaStrategySelector" name="test_zynq_ultrascale_strategy" time="0.001" /><testcase classname="tests.test_build_helpers.TestFpgaStrategySelector" name="test_default_strategy" time="0.001" /><testcase classname="tests.test_build_helpers.TestFpgaStrategySelector" name="test_case_insensitive_matching" time="0.001" /><testcase classname="tests.test_build_helpers.TestBatchWriteTclFiles" name="test_successful_batch_write" time="0.002" /><testcase classname="tests.test_build_helpers.TestBatchWriteTclFiles" name="test_partial_failure_batch_write" time="0.001" /><testcase classname="tests.test_build_helpers.TestBatchWriteTclFiles" name="test_custom_logger_batch_write" time="0.001" /><testcase classname="tests.test_build_helpers.TestBatchWriteTclFiles" name="test_empty_contents_batch_write" time="0.001" /><testcase classname="tests.test_build_helpers.TestValidateFpgaPart" name="test_validate_known_parts" time="0.001" /><testcase classname="tests.test_build_helpers.TestValidateFpgaPart" name="test_validate_unknown_but_valid_format" time="0.001" /><testcase classname="tests.test_build_helpers.TestValidateFpgaPart" name="test_validate_invalid_parts" time="0.001" /><testcase classname="tests.test_build_helpers.TestValidateFpgaPart" name="test_validate_with_constants_import_error" time="0.001"><failure message="AttributeError: &lt;module 'build_helpers' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build_helpers.py'&gt; does not have the attribute 'BOARD_PARTS'">tests/test_build_helpers.py:487: in test_validate_with_constants_import_error
    with patch("build_helpers.BOARD_PARTS", side_effect=ImportError):
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'build_helpers' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build_helpers.py'&gt; does not have the attribute 'BOARD_PARTS'</failure></testcase><testcase classname="tests.test_build_helpers.TestValidateFpgaPart" name="test_validate_case_insensitive" time="0.001" /><testcase classname="tests.test_build_helpers.TestValidateFpgaPart" name="test_validate_none_input" time="0.001" /><testcase classname="tests.test_build_helpers.TestIntegrationScenarios" name="test_complete_fpga_configuration_workflow" time="0.001" /><testcase classname="tests.test_build_helpers.TestIntegrationScenarios" name="test_batch_tcl_generation_with_strategy" time="0.001" /><testcase classname="tests.test_build_helpers.TestIntegrationScenarios" name="test_error_handling_integration" time="0.001" /><testcase classname="tests.test_build_helpers.TestLoggingBehavior" name="test_write_tcl_file_logging_levels" time="0.001" /><testcase classname="tests.test_build_helpers.TestLoggingBehavior" name="test_batch_write_logging_summary" time="0.002" /><testcase classname="tests.test_build_integration.TestBuildWithExternalExamples" name="test_build_sv_with_example_registers" time="0.299"><failure message="AssertionError: assert False&#10; +  where False = exists()&#10; +    where exists = PosixPath('/var/folders/pz/zdq1ptxs0h3700ssftp1vlch0000gn/T/tmpt3s_0p4p/example_controller.sv').exists">tests/test_build_integration.py:178: in test_build_sv_with_example_registers
    assert target_file.exists()
E   AssertionError: assert False
E    +  where False = exists()
E    +    where exists = PosixPath('/var/folders/pz/zdq1ptxs0h3700ssftp1vlch0000gn/T/tmpt3s_0p4p/example_controller.sv').exists</failure></testcase><testcase classname="tests.test_build_integration.TestBuildWithExternalExamples" name="test_build_tcl_with_example_donor_info" time="0.003"><failure message="AssertionError: assert ('128_KB' in '# Generated TCL for 0x1814:0x0201\nset_property BITSTREAM.GENERAL.COMPRESS TRUE [current_design]\nset_property CFGBVS VCCO [current_design]\nset_property CONFIG_VOLTAGE 3.3 [current_design]\n' or '128K' in '# Generated TCL for 0x1814:0x0201\nset_property BITSTREAM.GENERAL.COMPRESS TRUE [current_design]\nset_property CFGBVS VCCO [current_design]\nset_property CONFIG_VOLTAGE 3.3 [current_design]\n')">tests/test_build_integration.py:230: in test_build_tcl_with_example_donor_info
    assert "128_KB" in tcl_content or "128K" in tcl_content  # BAR size conversion
E   AssertionError: assert ('128_KB' in '# Generated TCL for 0x1814:0x0201\nset_property BITSTREAM.GENERAL.COMPRESS TRUE [current_design]\nset_property CFGBVS VCCO [current_design]\nset_property CONFIG_VOLTAGE 3.3 [current_design]\n' or '128K' in '# Generated TCL for 0x1814:0x0201\nset_property BITSTREAM.GENERAL.COMPRESS TRUE [current_design]\nset_property CFGBVS VCCO [current_design]\nset_property CONFIG_VOLTAGE 3.3 [current_design]\n')</failure></testcase><testcase classname="tests.test_build_integration.TestBuildWithExternalExamples" name="test_full_build_workflow_with_example_data" time="0.111"><failure message="AttributeError: &lt;module 'build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'get_donor_info'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'get_donor_info'</failure></testcase><testcase classname="tests.test_build_integration.TestBuildWithExternalExamples" name="test_behavior_profiling_integration" time="0.112"><failure message="AttributeError: &lt;module 'build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'BehaviorProfiler'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'BehaviorProfiler'</failure></testcase><testcase classname="tests.test_build_integration.TestAdvancedSVWithExternalExamples" name="test_advanced_sv_with_example_registers" time="0.112"><failure message="TypeError: int() can't convert non-string with explicit base">tests/test_build_integration.py:471: in test_advanced_sv_with_example_registers
    sv_content = generator.generate_advanced_systemverilog(
src/systemverilog_generator.py:515: in generate_advanced_systemverilog
    self.generate_register_logic(regs, variance_model)
src/systemverilog_generator.py:285: in generate_register_logic
    else int(reg["offset"], 16)
E   TypeError: int() can't convert non-string with explicit base</failure></testcase><testcase classname="tests.test_build_integration.TestAdvancedSVWithExternalExamples" name="test_variance_model_with_example_registers" time="0.121"><failure message="TypeError: int() can't convert non-string with explicit base">tests/test_build_integration.py:517: in test_variance_model_with_example_registers
    sv_content = generator.generate_advanced_systemverilog(
src/systemverilog_generator.py:515: in generate_advanced_systemverilog
    self.generate_register_logic(regs, variance_model)
src/systemverilog_generator.py:285: in generate_register_logic
    else int(reg["offset"], 16)
E   TypeError: int() can't convert non-string with explicit base</failure></testcase><testcase classname="tests.test_build_integration.TestBuildScriptIntegration" name="test_build_script_with_example_files" time="0.249"><failure message="AttributeError: &lt;module 'build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'get_donor_info'">tests/test_build_integration.py:571: in test_build_script_with_example_files
    with patch("build.get_donor_info") as mock_donor:
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'get_donor_info'</failure></testcase><testcase classname="tests.test_build_integration.TestBuildScriptIntegration" name="test_tcl_script_execution_with_example" time="0.057"><failure message="AssertionError: expected call not found.&#10;Expected: run('/opt/Xilinx/Vivado/2023.1/bin/vivado -mode batch -source /var/folders/pz/zdq1ptxs0h3700ssftp1vlch0000gn/T/tmpkhfhc0cy/vivado_generate_project.tcl', shell=True, check=True)&#10;  Actual: run('/opt/Xilinx/Vivado/2023.1/bin/vivado -mode batch -source /var/folders/pz/zdq1ptxs0h3700ssftp1vlch0000gn/T/tmpkhfhc0cy/vivado_generate_project.tcl', shell=True, check=True, capture_output=True, text=True)&#10;&#10;pytest introspection follows:&#10;&#10;Kwargs:&#10;assert {'capture_out... 'text': True} == {'check': True, 'shell': True}&#10;  &#10;  Omitting 2 identical items, use -vv to show&#10;  Left contains 2 more items:&#10;  #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33mcapture_output#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94mTrue#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mtext#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94mTrue#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[90m #x1B[39;49;00m {#x1B[90m#x1B[39;49;00m...&#10;  &#10;  ...Full output truncated (5 lines hidden), use '-vv' to show">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:977: in assert_called_with
    raise AssertionError(_error_message()) from cause
E   AssertionError: expected call not found.
E   Expected: run('/opt/Xilinx/Vivado/2023.1/bin/vivado -mode batch -source /var/folders/pz/zdq1ptxs0h3700ssftp1vlch0000gn/T/tmpkhfhc0cy/vivado_generate_project.tcl', shell=True, check=True)
E     Actual: run('/opt/Xilinx/Vivado/2023.1/bin/vivado -mode batch -source /var/folders/pz/zdq1ptxs0h3700ssftp1vlch0000gn/T/tmpkhfhc0cy/vivado_generate_project.tcl', shell=True, check=True, capture_output=True, text=True)

During handling of the above exception, another exception occurred:
tests/test_build_integration.py:628: in test_tcl_script_execution_with_example
    mock_run.assert_called_with(cmd, shell=True, check=True)
E   AssertionError: expected call not found.
E   Expected: run('/opt/Xilinx/Vivado/2023.1/bin/vivado -mode batch -source /var/folders/pz/zdq1ptxs0h3700ssftp1vlch0000gn/T/tmpkhfhc0cy/vivado_generate_project.tcl', shell=True, check=True)
E     Actual: run('/opt/Xilinx/Vivado/2023.1/bin/vivado -mode batch -source /var/folders/pz/zdq1ptxs0h3700ssftp1vlch0000gn/T/tmpkhfhc0cy/vivado_generate_project.tcl', shell=True, check=True, capture_output=True, text=True)
E   
E   pytest introspection follows:
E   
E   Kwargs:
E   assert {'capture_out... 'text': True} == {'check': True, 'shell': True}
E     
E     Omitting 2 identical items, use -vv to show
E     Left contains 2 more items:
E     #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33mcapture_output#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94mTrue#x1B[39;49;00m, #x1B[33m'#x1B[39;49;00m#x1B[33mtext#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94mTrue#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[90m #x1B[39;49;00m {#x1B[90m#x1B[39;49;00m...
E     
E     ...Full output truncated (5 lines hidden), use '-vv' to show</failure></testcase><testcase classname="tests.test_capability_pruning.TestCapabilityPruning" name="test_capability_chain_integrity" time="0.001"><failure message="AssertionError: 0 != 3">tests/test_capability_pruning.py:272: in test_capability_chain_integrity
    self.assertEqual(len(pruned_caps), 3)
E   AssertionError: 0 != 3</failure></testcase><testcase classname="tests.test_capability_pruning.TestCapabilityPruning" name="test_complex_capability_configuration" time="0.001"><failure message="AssertionError: unexpectedly None">tests/test_capability_pruning.py:441: in test_complex_capability_configuration
    self.assertIsNotNone(find_cap(pruned_config, PCICapabilityID.PCI_EXPRESS.value))
E   AssertionError: unexpectedly None</failure></testcase><testcase classname="tests.test_capability_pruning.TestCapabilityPruning" name="test_empty_capability_chain" time="0.001" /><testcase classname="tests.test_capability_pruning.TestCapabilityPruning" name="test_extended_capability_pruning" time="0.001"><failure message="AssertionError: 0 != 4">tests/test_capability_pruning.py:359: in test_extended_capability_pruning
    self.assertEqual(len(ext_caps), 4)
E   AssertionError: 0 != 4</failure></testcase><testcase classname="tests.test_capability_pruning.TestCapabilityPruning" name="test_pcie_capability_modification" time="0.001"><failure message="AssertionError: None != 64">tests/test_capability_pruning.py:521: in test_pcie_capability_modification
    self.assertEqual(pcie_offset, 0x40)
E   AssertionError: None != 64</failure></testcase><testcase classname="tests.test_capability_pruning.TestCapabilityPruning" name="test_pruning_specific_capability_types" time="0.001"><failure message="AssertionError: 0 != 5">tests/test_capability_pruning.py:173: in test_pruning_specific_capability_types
    self.assertEqual(len(caps), 5)
E   AssertionError: 0 != 5</failure></testcase><testcase classname="tests.test_capability_pruning_integration.TestCapabilityPruningIntegration" name="test_capability_pruning_disabled" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'vivado_run'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'vivado_run'</failure></testcase><testcase classname="tests.test_capability_pruning_integration.TestCapabilityPruningIntegration" name="test_capability_pruning_integration" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'vivado_run'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'vivado_run'</failure></testcase><testcase classname="tests.test_config_space_extraction.TestConfigSpaceExtraction" name="test_save_config_space_hex" time="0.002" /><testcase classname="tests.test_config_space_extraction.TestConfigSpaceExtraction" name="test_save_donor_info_with_config_space" time="0.002" /><testcase classname="tests.test_config_space_extraction.TestConfigSpaceExtraction" name="test_setup_module_with_config_extraction" time="0.002" /><testcase classname="tests.test_config_space_extraction.TestConfigSpaceExtraction" name="test_synthetic_config_space_generation" time="0.009" /><testcase classname="tests.test_config_space_shadow.TestConfigSpaceShadow" name="test_save_config_space_hex" time="0.002"><failure message="AssertionError: 1024 != 512">tests/test_config_space_shadow.py:63: in test_save_config_space_hex
    self.assertEqual(len(lines), 512)
E   AssertionError: 1024 != 512</failure></testcase><testcase classname="tests.test_config_space_shadow.TestConfigSpaceShadow" name="test_save_donor_info_with_config_space" time="0.002" /><testcase classname="tests.test_config_space_shadow.TestConfigSpaceShadow" name="test_setup_module_with_config_extraction" time="0.002" /><testcase classname="tests.test_config_space_shadow.TestConfigSpaceShadow" name="test_synthetic_config_space_generation" time="0.007" /><testcase classname="tests.test_constants.TestBoardPartsMapping" name="test_board_parts_not_empty" time="0.001" /><testcase classname="tests.test_constants.TestBoardPartsMapping" name="test_original_boards_present" time="0.001" /><testcase classname="tests.test_constants.TestBoardPartsMapping" name="test_captaindma_boards_present" time="0.001" /><testcase classname="tests.test_constants.TestBoardPartsMapping" name="test_other_boards_present" time="0.001" /><testcase classname="tests.test_constants.TestBoardPartsMapping" name="test_fpga_part_format_validity" time="0.001" /><testcase classname="tests.test_constants.TestBoardPartsMapping" name="test_artix7_parts_mapping" time="0.001" /><testcase classname="tests.test_constants.TestBoardPartsMapping" name="test_zynq_ultrascale_parts_mapping" time="0.001" /><testcase classname="tests.test_constants.TestBoardPartsMapping" name="test_no_duplicate_values" time="0.001" /><testcase classname="tests.test_constants.TestDefaultFpgaPart" name="test_default_fpga_part_defined" time="0.001" /><testcase classname="tests.test_constants.TestDefaultFpgaPart" name="test_default_fpga_part_valid_format" time="0.001" /><testcase classname="tests.test_constants.TestDefaultFpgaPart" name="test_default_fpga_part_in_board_parts" time="0.001" /><testcase classname="tests.test_constants.TestDefaultFpgaPart" name="test_default_fpga_part_is_conservative" time="0.001" /><testcase classname="tests.test_constants.TestVivadoConfiguration" name="test_vivado_project_name_defined" time="0.001" /><testcase classname="tests.test_constants.TestVivadoConfiguration" name="test_vivado_project_name_valid" time="0.001" /><testcase classname="tests.test_constants.TestVivadoConfiguration" name="test_vivado_project_dir_defined" time="0.001" /><testcase classname="tests.test_constants.TestVivadoConfiguration" name="test_vivado_project_dir_relative" time="0.001" /><testcase classname="tests.test_constants.TestVivadoConfiguration" name="test_vivado_output_dir_defined" time="0.001" /><testcase classname="tests.test_constants.TestTclScriptFiles" name="test_tcl_script_files_defined" time="0.001" /><testcase classname="tests.test_constants.TestTclScriptFiles" name="test_tcl_script_files_order" time="0.001" /><testcase classname="tests.test_constants.TestTclScriptFiles" name="test_tcl_script_files_naming_convention" time="0.001" /><testcase classname="tests.test_constants.TestTclScriptFiles" name="test_tcl_script_files_coverage" time="0.001" /><testcase classname="tests.test_constants.TestTclScriptFiles" name="test_master_build_script_defined" time="0.001" /><testcase classname="tests.test_constants.TestTclScriptFiles" name="test_master_build_script_name" time="0.001" /><testcase classname="tests.test_constants.TestBuildStrategies" name="test_synthesis_strategy_defined" time="0.001" /><testcase classname="tests.test_constants.TestBuildStrategies" name="test_synthesis_strategy_valid" time="0.001" /><testcase classname="tests.test_constants.TestBuildStrategies" name="test_implementation_strategy_defined" time="0.001" /><testcase classname="tests.test_constants.TestBuildStrategies" name="test_implementation_strategy_valid" time="0.001" /><testcase classname="tests.test_constants.TestFpgaFamilies" name="test_fpga_families_defined" time="0.001" /><testcase classname="tests.test_constants.TestFpgaFamilies" name="test_fpga_families_coverage" time="0.001" /><testcase classname="tests.test_constants.TestFpgaFamilies" name="test_fpga_families_patterns_valid" time="0.001" /><testcase classname="tests.test_constants.TestFpgaFamilies" name="test_fpga_families_pattern_uniqueness" time="0.001" /><testcase classname="tests.test_constants.TestFpgaFamilies" name="test_fpga_families_match_board_parts" time="0.001"><failure message="AssertionError: No board parts match family KINTEX7 pattern xc7k&#10;assert 0 &gt; 0&#10; +  where 0 = len([])">tests/test_constants.py:372: in test_fpga_families_match_board_parts
    assert (
E   AssertionError: No board parts match family KINTEX7 pattern xc7k
E   assert 0 &gt; 0
E    +  where 0 = len([])</failure></testcase><testcase classname="tests.test_constants.TestFpgaFamilies" name="test_specific_family_patterns" time="0.001" /><testcase classname="tests.test_constants.TestLegacyTclFiles" name="test_legacy_tcl_files_defined" time="0.001" /><testcase classname="tests.test_constants.TestLegacyTclFiles" name="test_legacy_tcl_files_format" time="0.001" /><testcase classname="tests.test_constants.TestLegacyTclFiles" name="test_legacy_tcl_files_not_overlap_current" time="0.001" /><testcase classname="tests.test_constants.TestLegacyTclFiles" name="test_legacy_tcl_files_naming_patterns" time="0.001" /><testcase classname="tests.test_constants.TestConstantsConsistency" name="test_default_fpga_part_has_family_pattern" time="0.001" /><testcase classname="tests.test_constants.TestConstantsConsistency" name="test_board_parts_cover_all_families" time="0.001"><failure message="AssertionError: No boards use FPGA family KINTEX7 (pattern: xc7k)&#10;assert 0 &gt; 0&#10; +  where 0 = len([])">tests/test_constants.py:447: in test_board_parts_cover_all_families
    assert (
E   AssertionError: No boards use FPGA family KINTEX7 (pattern: xc7k)
E   assert 0 &gt; 0
E    +  where 0 = len([])</failure></testcase><testcase classname="tests.test_constants.TestConstantsConsistency" name="test_tcl_script_count_reasonable" time="0.001" /><testcase classname="tests.test_constants.TestConstantsConsistency" name="test_vivado_project_name_matches_context" time="0.001" /><testcase classname="tests.test_constants.TestConstantsTypes" name="test_string_constants_types" time="0.001" /><testcase classname="tests.test_constants.TestConstantsTypes" name="test_dict_constants_types" time="0.001" /><testcase classname="tests.test_constants.TestConstantsTypes" name="test_list_constants_types" time="0.001" /><testcase classname="tests.test_constants.TestConstantsTypes" name="test_nested_types_consistency" time="0.001" /><testcase classname="tests.test_constants.TestConstantsCompleteness" name="test_all_expected_constants_present" time="0.001" /><testcase classname="tests.test_constants.TestConstantsCompleteness" name="test_no_unexpected_none_values" time="0.001" /><testcase classname="tests.test_constants.TestConstantsCompleteness" name="test_constants_not_empty" time="0.001" /><testcase classname="tests.test_donor_dump.TestKernelModuleBuild" name="test_module_compilation_success" time="0.001" /><testcase classname="tests.test_donor_dump.TestKernelModuleBuild" name="test_module_compilation_failure" time="0.001" /><testcase classname="tests.test_donor_dump.TestKernelModuleBuild" name="test_kernel_headers_check" time="0.001" /><testcase classname="tests.test_donor_dump.TestModuleParameters" name="test_bdf_parameter_validation" time="0.001" /><testcase classname="tests.test_donor_dump.TestModuleParameters" name="test_module_parameter_parsing" time="0.001" /><testcase classname="tests.test_donor_dump.TestModuleLoading" name="test_module_loading_success" time="0.001" /><testcase classname="tests.test_donor_dump.TestModuleLoading" name="test_module_loading_failure" time="0.001" /><testcase classname="tests.test_donor_dump.TestModuleLoading" name="test_module_unloading" time="0.001" /><testcase classname="tests.test_donor_dump.TestModuleLoading" name="test_module_already_loaded_handling" time="0.001" /><testcase classname="tests.test_donor_dump.TestProcInterface" name="test_proc_donor_dump_output_parsing" time="0.001" /><testcase classname="tests.test_donor_dump.TestProcInterface" name="test_proc_output_missing_fields" time="0.001" /><testcase classname="tests.test_donor_dump.TestProcInterface" name="test_proc_output_malformed" time="0.001" /><testcase classname="tests.test_donor_dump.TestDeviceAccess" name="test_pci_config_space_access_simulation" time="0.001" /><testcase classname="tests.test_donor_dump.TestDeviceAccess" name="test_bar_size_calculation" time="0.001" /><testcase classname="tests.test_donor_dump.TestDeviceAccess" name="test_extended_config_space_access" time="0.001" /><testcase classname="tests.test_donor_dump.TestErrorHandling" name="test_device_not_found_error" time="0.001" /><testcase classname="tests.test_donor_dump.TestErrorHandling" name="test_permission_denied_error" time="0.001" /><testcase classname="tests.test_donor_dump.TestErrorHandling" name="test_module_build_dependency_missing" time="0.001" /><testcase classname="tests.test_donor_dump.TestErrorHandling" name="test_invalid_bdf_parameter_handling" time="0.001" /><testcase classname="tests.test_donor_dump.TestHardwareSimulation" name="test_simulated_pci_device_data" time="0.001" /><testcase classname="tests.test_donor_dump.TestHardwareSimulation" name="test_simulated_config_space_data" time="0.001" /><testcase classname="tests.test_donor_dump.TestMakefileValidation" name="test_makefile_exists" time="0.001" /><testcase classname="tests.test_donor_dump.TestMakefileValidation" name="test_makefile_targets" time="0.002" /><testcase classname="tests.test_donor_dump.TestMakefileValidation" name="test_kernel_version_compatibility" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_manager_initialization" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_check_kernel_headers_available" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_check_kernel_headers_missing" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_install_kernel_headers_success" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_install_kernel_headers_failure" time="0.002" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_build_module_success" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_build_module_source_missing" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_is_module_loaded_true" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_is_module_loaded_false" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_load_module_invalid_bdf" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_load_module_success" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_unload_module_success" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_read_device_info_success" time="0.002" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_read_device_info_proc_missing" time="0.001" /><testcase classname="tests.test_donor_dump.TestDonorDumpManager" name="test_setup_module_complete_flow" time="0.002" /><testcase classname="tests.test_donor_dump.TestHexFileGeneration" name="test_save_device_info_with_extended_config" time="0.005" /><testcase classname="tests.test_donor_dump.TestHexFileGeneration" name="test_save_device_info_without_extended_config" time="0.002" /><testcase classname="tests.test_donor_dump.TestHexFileGeneration" name="test_save_device_info_with_disabled_extended_config" time="0.002" /><testcase classname="tests.test_donor_dump.TestHexFileGeneration" name="test_generate_blank_config_hex_direct" time="0.001" /><testcase classname="tests.test_donor_dump.TestHexFileGeneration" name="test_hex_file_always_created" time="0.004" /><testcase classname="tests.test_driver_scrape.TestValidateHexId" name="test_valid_hex_ids" time="0.001" /><testcase classname="tests.test_driver_scrape.TestValidateHexId" name="test_invalid_hex_ids" time="0.001" /><testcase classname="tests.test_driver_scrape.TestDriverAnalyzer" name="test_initialization" time="0.002" /><testcase classname="tests.test_driver_scrape.TestDriverAnalyzer" name="test_function_context_analysis" time="0.003" /><testcase classname="tests.test_driver_scrape.TestDriverAnalyzer" name="test_access_sequence_analysis" time="0.001" /><testcase classname="tests.test_driver_scrape.TestDriverAnalyzer" name="test_timing_constraints_analysis" time="0.001" /><testcase classname="tests.test_driver_scrape.TestDriverAnalyzer" name="test_bit_width_detection" time="0.001" /><testcase classname="tests.test_driver_scrape.TestKernelUtils" name="test_run_command_success" time="0.001" /><testcase classname="tests.test_driver_scrape.TestKernelUtils" name="test_run_command_failure" time="0.001" /><testcase classname="tests.test_driver_scrape.TestKernelUtils" name="test_ensure_kernel_source_not_found" time="0.001" /><testcase classname="tests.test_driver_scrape.TestKernelUtils" name="test_resolve_driver_module_success" time="0.001"><failure message="RuntimeError: Driver module resolution requires Linux. Current platform: Darwin. This functionality is only available on Linux systems.">tests/test_driver_scrape.py:335: in test_resolve_driver_module_success
    result = resolve_driver_module("8086", "1533")
src/scripts/kernel_utils.py:155: in resolve_driver_module
    check_linux_requirement("Driver module resolution")
src/scripts/kernel_utils.py:33: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: Driver module resolution requires Linux. Current platform: Darwin. This functionality is only available on Linux systems.</failure></testcase><testcase classname="tests.test_driver_scrape.TestKernelUtils" name="test_resolve_driver_module_not_found" time="0.001"><failure message="AssertionError: Regex pattern did not match.&#10; Regex: 'No driver module found'&#10; Input: 'Driver module resolution requires Linux. Current platform: Darwin. This functionality is only available on Linux systems.'">tests/test_driver_scrape.py:344: in test_resolve_driver_module_not_found
    resolve_driver_module("FFFF", "FFFF")
src/scripts/kernel_utils.py:155: in resolve_driver_module
    check_linux_requirement("Driver module resolution")
src/scripts/kernel_utils.py:33: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: Driver module resolution requires Linux. Current platform: Darwin. This functionality is only available on Linux systems.

During handling of the above exception, another exception occurred:
tests/test_driver_scrape.py:343: in test_resolve_driver_module_not_found
    with pytest.raises(RuntimeError, match="No driver module found"):
E   AssertionError: Regex pattern did not match.
E    Regex: 'No driver module found'
E    Input: 'Driver module resolution requires Linux. Current platform: Darwin. This functionality is only available on Linux systems.'</failure></testcase><testcase classname="tests.test_driver_scrape.TestKernelUtils" name="test_find_driver_sources" time="0.003" /><testcase classname="tests.test_driver_scrape.TestKernelUtils" name="test_find_driver_sources_empty" time="0.002" /><testcase classname="tests.test_driver_scrape.TestExtractRegistersWithAnalysis" name="test_extract_with_valid_sources" time="0.020" /><testcase classname="tests.test_driver_scrape.TestExtractRegistersWithAnalysis" name="test_extract_with_empty_sources" time="0.001" /><testcase classname="tests.test_driver_scrape.TestMainFunction" name="test_main_success_flow" time="0.001"><failure message="SystemExit: 2">src/scripts/driver_scrape.py:595: in main
    check_linux_requirement("Driver analysis")
src/scripts/kernel_utils.py:33: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: Driver analysis requires Linux. Current platform: Darwin. This functionality is only available on Linux systems.

During handling of the above exception, another exception occurred:
tests/test_driver_scrape.py:427: in test_main_success_flow
    main()
src/scripts/driver_scrape.py:668: in main
    sys.exit(2)
E   SystemExit: 2</failure></testcase><testcase classname="tests.test_driver_scrape.TestMainFunction" name="test_main_no_kernel_source" time="0.001"><failure message="SystemExit: 2">src/scripts/driver_scrape.py:595: in main
    check_linux_requirement("Driver analysis")
src/scripts/kernel_utils.py:33: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: Driver analysis requires Linux. Current platform: Darwin. This functionality is only available on Linux systems.

During handling of the above exception, another exception occurred:
tests/test_driver_scrape.py:447: in test_main_no_kernel_source
    main()
src/scripts/driver_scrape.py:668: in main
    sys.exit(2)
E   SystemExit: 2</failure></testcase><testcase classname="tests.test_driver_scrape.TestMainFunction" name="test_main_invalid_vendor_id" time="0.001" /><testcase classname="tests.test_driver_scrape.TestMainFunction" name="test_main_non_linux_platform" time="0.001" /><testcase classname="tests.test_driver_scrape.TestNestedStateMachine" name="test_nested_switch_analysis" time="0.001" /><testcase classname="tests.test_driver_scrape.TestOutputSchema" name="test_register_schema" time="0.001" /><testcase classname="tests.test_driver_scrape.TestPerformanceOptimizations" name="test_file_content_caching" time="0.001" /><testcase classname="tests.test_driver_scrape.TestPerformanceOptimizations" name="test_regex_pattern_caching" time="0.001" /><testcase classname="tests.test_driver_scrape.TestHelperFunctions" name="test_run_command_success" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'run'">tests/test_driver_scrape.py:655: in test_run_command_success
    result = driver_scrape.run("echo test")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'run'</failure></testcase><testcase classname="tests.test_driver_scrape.TestHelperFunctions" name="test_run_command_failure" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'run'">tests/test_driver_scrape.py:665: in test_run_command_failure
    driver_scrape.run("false")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'run'</failure></testcase><testcase classname="tests.test_driver_scrape.TestModuleResolution" name="test_ko_name_from_alias_success" time="0.003"><failure message="AttributeError: &lt;module 'driver_scrape' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/scripts/driver_scrape.py'&gt; does not have the attribute 'run'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'driver_scrape' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/scripts/driver_scrape.py'&gt; does not have the attribute 'run'</failure></testcase><testcase classname="tests.test_driver_scrape.TestModuleResolution" name="test_ko_name_from_alias_not_found" time="0.001"><failure message="AttributeError: &lt;module 'driver_scrape' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/scripts/driver_scrape.py'&gt; does not have the attribute 'run'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'driver_scrape' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/scripts/driver_scrape.py'&gt; does not have the attribute 'run'</failure></testcase><testcase classname="tests.test_driver_scrape.TestFunctionContextAnalysis" name="test_analyze_function_context_complete" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'">tests/test_driver_scrape.py:729: in test_analyze_function_context_complete
    context = driver_scrape.analyze_function_context(file_content, "REG_CTRL")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'</failure></testcase><testcase classname="tests.test_driver_scrape.TestFunctionContextAnalysis" name="test_analyze_function_context_interrupt_handler" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'">tests/test_driver_scrape.py:753: in test_analyze_function_context_interrupt_handler
    context = driver_scrape.analyze_function_context(file_content, "REG_IRQ_STATUS")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'</failure></testcase><testcase classname="tests.test_driver_scrape.TestFunctionContextAnalysis" name="test_analyze_function_context_runtime_function" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'">tests/test_driver_scrape.py:770: in test_analyze_function_context_runtime_function
    context = driver_scrape.analyze_function_context(
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'</failure></testcase><testcase classname="tests.test_driver_scrape.TestFunctionContextAnalysis" name="test_analyze_function_context_not_found" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'">tests/test_driver_scrape.py:787: in test_analyze_function_context_not_found
    context = driver_scrape.analyze_function_context(file_content, "REG_MISSING")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'</failure></testcase><testcase classname="tests.test_driver_scrape.TestFunctionContextAnalysis" name="test_analyze_function_context_cleanup_function" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'">tests/test_driver_scrape.py:804: in test_analyze_function_context_cleanup_function
    context = driver_scrape.analyze_function_context(file_content, "REG_ENABLE")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'</failure></testcase><testcase classname="tests.test_driver_scrape.TestAccessPatternAnalysis" name="test_access_pattern_write_heavy" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'">tests/test_driver_scrape.py:825: in test_access_pattern_write_heavy
    context = driver_scrape.analyze_function_context(file_content, "REG_CONFIG")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'</failure></testcase><testcase classname="tests.test_driver_scrape.TestAccessPatternAnalysis" name="test_access_pattern_read_heavy" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'">tests/test_driver_scrape.py:841: in test_access_pattern_read_heavy
    context = driver_scrape.analyze_function_context(file_content, "REG_STATUS")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'</failure></testcase><testcase classname="tests.test_driver_scrape.TestAccessPatternAnalysis" name="test_access_pattern_balanced" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'">tests/test_driver_scrape.py:855: in test_access_pattern_balanced
    context = driver_scrape.analyze_function_context(file_content, "REG_DATA")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'</failure></testcase><testcase classname="tests.test_driver_scrape.TestAccessPatternAnalysis" name="test_access_pattern_write_then_read" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'">tests/test_driver_scrape.py:867: in test_access_pattern_write_then_read
    context = driver_scrape.analyze_function_context(file_content, "REG_COMMAND")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_function_context'</failure></testcase><testcase classname="tests.test_driver_scrape.TestTimingConstraintAnalysis" name="test_analyze_timing_constraints_with_delays" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_timing_constraints'">tests/test_driver_scrape.py:886: in test_analyze_timing_constraints_with_delays
    constraints = driver_scrape.analyze_timing_constraints(file_content, "REG_INIT")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_timing_constraints'</failure></testcase><testcase classname="tests.test_driver_scrape.TestTimingConstraintAnalysis" name="test_analyze_timing_constraints_no_delays" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_timing_constraints'">tests/test_driver_scrape.py:903: in test_analyze_timing_constraints_no_delays
    constraints = driver_scrape.analyze_timing_constraints(
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_timing_constraints'</failure></testcase><testcase classname="tests.test_driver_scrape.TestTimingConstraintAnalysis" name="test_analyze_timing_constraints_complex_delays" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_timing_constraints'">tests/test_driver_scrape.py:925: in test_analyze_timing_constraints_complex_delays
    constraints = driver_scrape.analyze_timing_constraints(
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_timing_constraints'</failure></testcase><testcase classname="tests.test_driver_scrape.TestSequenceAnalysis" name="test_analyze_access_sequences_simple" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_access_sequences'">tests/test_driver_scrape.py:949: in test_analyze_access_sequences_simple
    sequences = driver_scrape.analyze_access_sequences(file_content, "REG_ENABLE")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_access_sequences'</failure></testcase><testcase classname="tests.test_driver_scrape.TestSequenceAnalysis" name="test_analyze_access_sequences_multiple_functions" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_access_sequences'">tests/test_driver_scrape.py:974: in test_analyze_access_sequences_multiple_functions
    sequences = driver_scrape.analyze_access_sequences(file_content, "REG_CTRL")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_access_sequences'</failure></testcase><testcase classname="tests.test_driver_scrape.TestSequenceAnalysis" name="test_analyze_access_sequences_complex_function" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_access_sequences'">tests/test_driver_scrape.py:994: in test_analyze_access_sequences_complex_function
    sequences = driver_scrape.analyze_access_sequences(file_content, "REG_TARGET")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'analyze_access_sequences'</failure></testcase><testcase classname="tests.test_driver_scrape.TestRegisterExtraction" name="test_extract_registers_from_header" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'extract_registers_from_file'">tests/test_driver_scrape.py:1028: in test_extract_registers_from_header
    registers = driver_scrape.extract_registers_from_file("test_header.h")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'extract_registers_from_file'</failure></testcase><testcase classname="tests.test_driver_scrape.TestRegisterExtraction" name="test_extract_registers_from_source" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'enhance_registers_with_context'">tests/test_driver_scrape.py:1072: in test_extract_registers_from_source
    enhanced_registers = driver_scrape.enhance_registers_with_context(
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'enhance_registers_with_context'</failure></testcase><testcase classname="tests.test_driver_scrape.TestMainWorkflow" name="test_main_workflow_success" time="0.001"><failure message="AttributeError: &lt;module 'driver_scrape' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/scripts/driver_scrape.py'&gt; does not have the attribute 'extract_and_analyze_registers'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'driver_scrape' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/scripts/driver_scrape.py'&gt; does not have the attribute 'extract_and_analyze_registers'</failure></testcase><testcase classname="tests.test_driver_scrape.TestErrorHandling" name="test_invalid_vendor_device_format" time="0.001" /><testcase classname="tests.test_driver_scrape.TestErrorHandling" name="test_file_not_found_handling" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'extract_registers_from_file'">tests/test_driver_scrape.py:1151: in test_file_not_found_handling
    registers = driver_scrape.extract_registers_from_file("nonexistent.h")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'extract_registers_from_file'</failure></testcase><testcase classname="tests.test_driver_scrape.TestErrorHandling" name="test_malformed_register_definitions" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'extract_registers_from_file'">tests/test_driver_scrape.py:1163: in test_malformed_register_definitions
    registers = driver_scrape.extract_registers_from_file("malformed.h")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'extract_registers_from_file'</failure></testcase><testcase classname="tests.test_driver_scrape.TestErrorHandling" name="test_empty_source_files" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'extract_registers_from_file'">tests/test_driver_scrape.py:1172: in test_empty_source_files
    registers = driver_scrape.extract_registers_from_file("empty.h")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'extract_registers_from_file'</failure></testcase><testcase classname="tests.test_driver_scrape.TestErrorHandling" name="test_binary_file_handling" time="0.001"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'extract_registers_from_file'">tests/test_driver_scrape.py:1181: in test_binary_file_handling
    registers = driver_scrape.extract_registers_from_file("binary.o")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'extract_registers_from_file'</failure></testcase><testcase classname="tests.test_driver_scrape.TestPerformanceAndScaling" name="test_large_source_file_processing" time="0.002"><failure message="AttributeError: module 'src.scripts.driver_scrape' has no attribute 'extract_registers_from_file'">tests/test_driver_scrape.py:1204: in test_large_source_file_processing
    registers = driver_scrape.extract_registers_from_file("large_file.h")
E   AttributeError: module 'src.scripts.driver_scrape' has no attribute 'extract_registers_from_file'</failure></testcase><testcase classname="tests.test_driver_scrape.TestPerformanceAndScaling" name="test_memory_usage_with_large_datasets" time="0.032" /><testcase classname="tests.test_driver_scrape.TestOutputFormatting" name="test_json_output_format" time="0.001" /><testcase classname="tests.test_driver_scrape.TestOutputFormatting" name="test_json_output_special_characters" time="0.001" /><testcase classname="tests.test_driver_scrape.TestOutputFormatting" name="test_empty_output_handling" time="0.001" /><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_cleanup_on_error" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:505: in test_cleanup_on_error
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_concurrent_access_handling" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:395: in test_concurrent_access_handling
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_config_space_read_failure" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:289: in test_config_space_read_failure
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_disk_space_error_handling" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:178: in test_disk_space_error_handling
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_error_context_preservation" time="0.001" /><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_error_logging_integration" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:439: in test_error_logging_integration
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_error_recovery_mechanisms" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:463: in test_error_recovery_mechanisms
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_git_repository_corruption_handling" time="0.001" /><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_interrupt_handling" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:375: in test_interrupt_handling
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_invalid_bdf_validation" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:86: in test_invalid_bdf_validation
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_invalid_board_type_handling" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:111: in test_invalid_board_type_handling
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_malformed_device_info_handling" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:203: in test_malformed_device_info_handling
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_memory_exhaustion_handling" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:350: in test_memory_exhaustion_handling
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_missing_output_directory_handling" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:131: in test_missing_output_directory_handling
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_network_error_handling" time="0.001" /><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_permission_error_handling" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:151: in test_permission_error_handling
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_systemverilog_syntax_error_detection" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:310: in test_systemverilog_syntax_error_detection
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_tcl_syntax_error_detection" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:330: in test_tcl_syntax_error_detection
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_tui_error_creation" time="0.001" /><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_tui_error_severity_levels" time="0.001" /><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_unicode_handling_in_errors" time="0.001" /><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_validation_error_messages" time="0.001" /><testcase classname="tests.test_error_handling.TestErrorHandling" name="test_vivado_not_found_handling" time="0.001" /><testcase classname="tests.test_error_handling.TestErrorRecovery" name="test_fallback_device_detection" time="0.001" /><testcase classname="tests.test_error_handling.TestErrorRecovery" name="test_graceful_degradation" time="0.001" /><testcase classname="tests.test_error_handling.TestErrorRecovery" name="test_synthetic_config_space_generation" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_error_handling.py:546: in test_synthetic_config_space_generation
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_external_integration.TestExternalPatternIntegration" name="test_advanced_sv_generator_with_external_patterns" time="0.119"><failure message="TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'supported_power_states'">tests/test_external_integration.py:94: in test_advanced_sv_generator_with_external_patterns
    power_config = PowerManagementConfig(
E   TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'supported_power_states'</failure></testcase><testcase classname="tests.test_external_integration.TestExternalPatternIntegration" name="test_power_management_with_external_patterns" time="0.114"><failure message="TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'supported_power_states'">tests/test_external_integration.py:199: in test_power_management_with_external_patterns
    power_config = PowerManagementConfig(
E   TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'supported_power_states'</failure></testcase><testcase classname="tests.test_external_integration.TestExternalPatternIntegration" name="test_error_handling_with_external_patterns" time="0.123" /><testcase classname="tests.test_external_integration.TestExternalPatternIntegration" name="test_performance_counters_with_external_patterns" time="0.108"><failure message="AssertionError: assert 'Performance Counter' in '    // Lightweight performance counter declarations\n    // See perf_stub module for implementation\n\n    // Transaction counting implemented in perf_stub\n\n    // Bandwidth monitoring implemented in perf_stub\n\n    // Device-specific counters for network implemented in perf_stub\n\n    // Performance grading implemented in perf_stub\n'">tests/test_external_integration.py:326: in test_performance_counters_with_external_patterns
    assert "Performance Counter" in perf_code
E   AssertionError: assert 'Performance Counter' in '    // Lightweight performance counter declarations\n    // See perf_stub module for implementation\n\n    // Transaction counting implemented in perf_stub\n\n    // Bandwidth monitoring implemented in perf_stub\n\n    // Device-specific counters for network implemented in perf_stub\n\n    // Performance grading implemented in perf_stub\n'</failure></testcase><testcase classname="tests.test_external_integration.TestExternalExampleBasedRegisters" name="test_extract_registers_from_example" time="0.122"><failure message="TypeError: int() can't convert non-string with explicit base">tests/test_external_integration.py:455: in test_extract_registers_from_example
    sv_content = generator.generate_advanced_systemverilog(reg_defs)
src/systemverilog_generator.py:515: in generate_advanced_systemverilog
    self.generate_register_logic(regs, variance_model)
src/systemverilog_generator.py:285: in generate_register_logic
    else int(reg["offset"], 16)
E   TypeError: int() can't convert non-string with explicit base</failure></testcase><testcase classname="tests.test_external_integration.TestExternalExampleBasedRegisters" name="test_register_access_patterns_from_example" time="0.114" /><testcase classname="tests.test_external_integration.TestExternalExampleBasedStateMachines" name="test_extract_state_machines_from_example" time="0.113"><failure message="TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'supported_power_states'">tests/test_external_integration.py:551: in test_extract_state_machines_from_example
    power_config = PowerManagementConfig(
E   TypeError: PowerManagementConfig.__init__() got an unexpected keyword argument 'supported_power_states'</failure></testcase><testcase classname="tests.test_flash_fpga.TestCommandExecution" name="test_run_command_success" time="0.002" /><testcase classname="tests.test_flash_fpga.TestCommandExecution" name="test_run_command_failure" time="0.001" /><testcase classname="tests.test_flash_fpga.TestArgumentParsing" name="test_argument_parser_creation" time="0.002" /><testcase classname="tests.test_flash_fpga.TestArgumentParsing" name="test_argument_parser_missing_bitfile" time="0.002" /><testcase classname="tests.test_flash_fpga.TestUSBLoaderValidation" name="test_usbloader_available" time="0.001" /><testcase classname="tests.test_flash_fpga.TestUSBLoaderValidation" name="test_usbloader_not_available" time="0.001" /><testcase classname="tests.test_flash_fpga.TestBitfileValidation" name="test_bitfile_exists" time="0.002" /><testcase classname="tests.test_flash_fpga.TestBitfileValidation" name="test_bitfile_not_exists" time="0.001" /><testcase classname="tests.test_flash_fpga.TestFlashingProcess" name="test_flash_process_success" time="0.002" /><testcase classname="tests.test_flash_fpga.TestFlashingProcess" name="test_flash_process_no_usbloader" time="0.001" /><testcase classname="tests.test_flash_fpga.TestFlashingProcess" name="test_flash_process_no_bitfile" time="0.001" /><testcase classname="tests.test_flash_fpga.TestVIDPIDConfiguration" name="test_default_vidpid" time="0.001" /><testcase classname="tests.test_flash_fpga.TestVIDPIDConfiguration" name="test_flash_command_format" time="0.001" /><testcase classname="tests.test_flash_fpga.TestErrorHandling" name="test_usbloader_command_failure" time="0.001" /><testcase classname="tests.test_flash_fpga.TestErrorHandling" name="test_usbloader_permission_error" time="0.001" /><testcase classname="tests.test_flash_fpga.TestErrorHandling" name="test_invalid_bitfile_path" time="0.001" /><testcase classname="tests.test_flash_fpga.TestIntegrationScenarios" name="test_complete_flash_workflow" time="0.002" /><testcase classname="tests.test_flash_fpga.TestIntegrationScenarios" name="test_flash_with_different_boards" time="0.001" /><testcase classname="tests.test_flash_fpga.TestPerformanceAndReliability" name="test_large_firmware_file_handling" time="0.004" /><testcase classname="tests.test_flash_fpga.TestPerformanceAndReliability" name="test_concurrent_flash_attempts" time="0.001" /><testcase classname="tests.test_flash_fpga.TestPerformanceAndReliability" name="test_path_resolution_edge_cases" time="0.001" /><testcase classname="tests.test_flash_fpga.TestSecurityConsiderations" name="test_command_injection_prevention" time="0.001" /><testcase classname="tests.test_flash_fpga.TestSecurityConsiderations" name="test_safe_command_execution" time="0.001" /><testcase classname="tests.test_flash_fpga.TestSecurityConsiderations" name="test_file_permission_checks" time="0.001" /><testcase classname="tests.test_flash_fpga.TestDocumentationAndUsage" name="test_help_message_content" time="0.001" /><testcase classname="tests.test_flash_fpga.TestDocumentationAndUsage" name="test_usage_examples" time="0.001" /><testcase classname="tests.test_flash_fpga.TestDocumentationAndUsage" name="test_error_message_clarity" time="0.001" /><testcase classname="tests.test_flash_fpga.TestCompatibility" name="test_usbloader_path_variations" time="0.001" /><testcase classname="tests.test_flash_fpga.TestCompatibility" name="test_cross_platform_path_handling" time="0.001" /><testcase classname="tests.test_flash_fpga.TestCompatibility" name="test_filename_encoding_handling" time="0.001" /><testcase classname="tests.test_generate.TestBDFValidation" name="test_valid_bdf_formats" time="0.001" /><testcase classname="tests.test_generate.TestBDFValidation" name="test_invalid_bdf_formats" time="0.001" /><testcase classname="tests.test_generate.TestPCIDeviceEnumeration" name="test_list_pci_devices_success" time="0.001"><failure message="RuntimeError: PCIe device enumeration requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:63: in test_list_pci_devices_success
    devices = generate.list_pci_devices()
generate.py:126: in list_pci_devices
    check_linux_requirement("PCIe device enumeration")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: PCIe device enumeration requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestPCIDeviceEnumeration" name="test_list_pci_devices_empty" time="0.001"><failure message="RuntimeError: PCIe device enumeration requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:82: in test_list_pci_devices_empty
    devices = generate.list_pci_devices()
generate.py:126: in list_pci_devices
    check_linux_requirement("PCIe device enumeration")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: PCIe device enumeration requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestPCIDeviceEnumeration" name="test_list_pci_devices_malformed" time="0.001"><failure message="RuntimeError: PCIe device enumeration requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:89: in test_list_pci_devices_malformed
    devices = generate.list_pci_devices()
generate.py:126: in list_pci_devices
    check_linux_requirement("PCIe device enumeration")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: PCIe device enumeration requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestDeviceSelection" name="test_choose_device_valid_selection" time="0.001" /><testcase classname="tests.test_generate.TestDeviceSelection" name="test_choose_device_invalid_then_valid" time="0.001" /><testcase classname="tests.test_generate.TestDriverManagement" name="test_get_current_driver_exists" time="0.001"><failure message="RuntimeError: Driver detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:128: in test_get_current_driver_exists
    driver = generate.get_current_driver("0000:03:00.0")
generate.py:162: in get_current_driver
    check_linux_requirement("Driver detection")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: Driver detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestDriverManagement" name="test_get_current_driver_none" time="0.001"><failure message="RuntimeError: Driver detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:137: in test_get_current_driver_none
    driver = generate.get_current_driver("0000:03:00.0")
generate.py:162: in get_current_driver
    check_linux_requirement("Driver detection")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: Driver detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestDriverManagement" name="test_get_current_driver_invalid_bdf" time="0.001"><failure message="RuntimeError: Driver detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:143: in test_get_current_driver_invalid_bdf
    generate.get_current_driver("invalid-bd")
generate.py:162: in get_current_driver
    check_linux_requirement("Driver detection")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: Driver detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestDriverManagement" name="test_get_iommu_group" time="0.001"><failure message="RuntimeError: IOMMU group detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:152: in test_get_iommu_group
    group = generate.get_iommu_group("0000:03:00.0")
generate.py:177: in get_iommu_group
    check_linux_requirement("IOMMU group detection")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: IOMMU group detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestDriverManagement" name="test_get_iommu_group_invalid_bdf" time="0.001"><failure message="RuntimeError: IOMMU group detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:161: in test_get_iommu_group_invalid_bdf
    generate.get_iommu_group("invalid-bd")
generate.py:177: in get_iommu_group
    check_linux_requirement("IOMMU group detection")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: IOMMU group detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestVFIOBinding" name="test_bind_to_vfio_success" time="0.001"><failure message="RuntimeError: VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:173: in test_bind_to_vfio_success
    generate.bind_to_vfio("0000:03:00.0", "8086", "1533", "e1000e")
generate.py:350: in bind_to_vfio
    check_linux_requirement("VFIO device binding")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestVFIOBinding" name="test_bind_to_vfio_no_original_driver" time="0.001"><failure message="RuntimeError: VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:188: in test_bind_to_vfio_no_original_driver
    generate.bind_to_vfio("0000:03:00.0", "8086", "1533", None)
generate.py:350: in bind_to_vfio
    check_linux_requirement("VFIO device binding")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestVFIOBinding" name="test_bind_to_vfio_driver_not_available" time="0.001"><failure message="AssertionError: Regex pattern did not match.&#10; Regex: 'vfio-pci driver not available'&#10; Input: 'VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.'">tests/test_generate.py:202: in test_bind_to_vfio_driver_not_available
    generate.bind_to_vfio("0000:03:00.0", "8086", "1533", "e1000e")
generate.py:350: in bind_to_vfio
    check_linux_requirement("VFIO device binding")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.

During handling of the above exception, another exception occurred:
tests/test_generate.py:201: in test_bind_to_vfio_driver_not_available
    with pytest.raises(RuntimeError, match="vfio-pci driver not available"):
E   AssertionError: Regex pattern did not match.
E    Regex: 'vfio-pci driver not available'
E    Input: 'VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.'</failure></testcase><testcase classname="tests.test_generate.TestVFIOBinding" name="test_bind_to_vfio_invalid_bdf" time="0.001"><failure message="RuntimeError: VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:207: in test_bind_to_vfio_invalid_bdf
    generate.bind_to_vfio("invalid-bd", "8086", "1533", "e1000e")
generate.py:350: in bind_to_vfio
    check_linux_requirement("VFIO device binding")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestDriverRestore" name="test_restore_original_driver_success" time="0.002"><failure message="AssertionError: Calls not found.&#10;Expected: [call('echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind'),&#10; call('echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind')]&#10;  Actual: []&#10;&#10;pytest introspection follows:&#10;&#10;Args:&#10;assert () == ('echo 0000:0...-pci/unbind',)&#10;  &#10;  Right contains one more item: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mecho 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[92m+ ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m- (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m-     'echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m- )#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;Args:&#10;assert () == ('echo 0000:0...e1000e/bind',)&#10;  &#10;  Right contains one more item: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mecho 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[92m+ ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m- (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m-     'echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m- )#x1B[39;49;00m#x1B[90m#x1B[39;49;00m">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1014: in assert_has_calls
    raise AssertionError(
E   AssertionError: Calls not found.
E   Expected: [call('echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind'),
E    call('echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind')]
E     Actual: []

During handling of the above exception, another exception occurred:
tests/test_generate.py:229: in test_restore_original_driver_success
    mock_run.assert_has_calls(expected_calls)
E   AssertionError: Calls not found.
E   Expected: [call('echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind'),
E    call('echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind')]
E     Actual: []
E   
E   pytest introspection follows:
E   
E   Args:
E   assert () == ('echo 0000:0...-pci/unbind',)
E     
E     Right contains one more item: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mecho 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[92m+ ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m- (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m-     'echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m- )#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E   Args:
E   assert () == ('echo 0000:0...e1000e/bind',)
E     
E     Right contains one more item: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mecho 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[92m+ ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m- (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m-     'echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m- )#x1B[39;49;00m#x1B[90m#x1B[39;49;00m</failure></testcase><testcase classname="tests.test_generate.TestDriverRestore" name="test_restore_original_driver_not_vfio" time="0.001" /><testcase classname="tests.test_generate.TestDriverRestore" name="test_restore_original_driver_no_original" time="0.001" /><testcase classname="tests.test_generate.TestUSBDeviceManagement" name="test_list_usb_devices_success" time="0.001" /><testcase classname="tests.test_generate.TestUSBDeviceManagement" name="test_list_usb_devices_command_error" time="0.001" /><testcase classname="tests.test_generate.TestUSBDeviceManagement" name="test_select_usb_device_success" time="0.001" /><testcase classname="tests.test_generate.TestUSBDeviceManagement" name="test_select_usb_device_no_devices" time="0.001" /><testcase classname="tests.test_generate.TestFirmwareFlashing" name="test_flash_firmware_success" time="0.001" /><testcase classname="tests.test_generate.TestFirmwareFlashing" name="test_flash_firmware_no_usbloader" time="0.001" /><testcase classname="tests.test_generate.TestFirmwareFlashing" name="test_flash_firmware_command_failure" time="0.001" /><testcase classname="tests.test_generate.TestContainerExecution" name="test_run_build_container_success" time="0.003"><failure message="RuntimeError: Driver detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:364: in test_run_build_container_success
    generate.run_build_container("0000:03:00.0", "75t", "/dev/vfio/15", mock_args)
generate.py:922: in run_build_container
    _validate_vfio_device_access(vfio_device, bdf)
generate.py:782: in _validate_vfio_device_access
    current_driver = get_current_driver(bdf)
generate.py:162: in get_current_driver
    check_linux_requirement("Driver detection")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: Driver detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestContainerExecution" name="test_run_build_container_no_vfio_device" time="0.002"><failure message="AssertionError: Regex pattern did not match.&#10; Regex: 'VFIO device .* not found'&#10; Input: 'Podman not found in PATH. Please install Podman container runtime.'">tests/test_generate.py:393: in test_run_build_container_no_vfio_device
    generate.run_build_container(
generate.py:909: in run_build_container
    _validate_container_environment()
generate.py:797: in _validate_container_environment
    raise RuntimeError(error_msg)
E   RuntimeError: Podman not found in PATH. Please install Podman container runtime.

During handling of the above exception, another exception occurred:
tests/test_generate.py:392: in test_run_build_container_no_vfio_device
    with pytest.raises(RuntimeError, match="VFIO device .* not found"):
E   AssertionError: Regex pattern did not match.
E    Regex: 'VFIO device .* not found'
E    Input: 'Podman not found in PATH. Please install Podman container runtime.'</failure></testcase><testcase classname="tests.test_generate.TestContainerExecution" name="test_run_build_container_invalid_bdf" time="0.001" /><testcase classname="tests.test_generate.TestContainerExecution" name="test_run_build_container_with_advanced_features" time="0.001"><failure message="RuntimeError: Driver detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_generate.py:432: in test_run_build_container_with_advanced_features
    generate.run_build_container("0000:03:00.0", "75t", "/dev/vfio/15", mock_args)
generate.py:922: in run_build_container
    _validate_vfio_device_access(vfio_device, bdf)
generate.py:782: in _validate_vfio_device_access
    current_driver = get_current_driver(bdf)
generate.py:162: in get_current_driver
    check_linux_requirement("Driver detection")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: Driver detection requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_generate.TestEnvironmentValidation" name="test_validate_environment_success" time="0.001"><failure message="OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.">tests/test_generate.py:467: in test_validate_environment_success
    generate.validate_environment()
generate.py:1133: in validate_environment
    input("\nWould you like to continue without Vivado? (y/N): ")
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/_pytest/capture.py:227: in read
    raise OSError(
E   OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.</failure></testcase><testcase classname="tests.test_generate.TestEnvironmentValidation" name="test_validate_environment_not_root" time="0.001" /><testcase classname="tests.test_generate.TestEnvironmentValidation" name="test_validate_environment_no_podman" time="0.001" /><testcase classname="tests.test_generate.TestMainWorkflow" name="test_main_success_no_flash" time="0.002"><failure message="assert 1 == 0">tests/test_generate.py:524: in test_main_success_no_flash
    assert result == 0
E   assert 1 == 0</failure></testcase><testcase classname="tests.test_generate.TestMainWorkflow" name="test_main_success_with_flash" time="0.002"><failure message="assert 1 == 0">tests/test_generate.py:569: in test_main_success_with_flash
    assert result == 0
E   assert 1 == 0</failure></testcase><testcase classname="tests.test_generate.TestMainWorkflow" name="test_main_no_devices" time="0.001" /><testcase classname="tests.test_generate.TestMainWorkflow" name="test_main_keyboard_interrupt" time="0.001" /><testcase classname="tests.test_generate.TestErrorHandling" name="test_run_command_success" time="0.001" /><testcase classname="tests.test_generate.TestErrorHandling" name="test_run_command_failure" time="0.001" /><testcase classname="tests.test_generate.TestArgumentParsing" name="test_default_arguments" time="0.001" /><testcase classname="tests.test_generate.TestArgumentParsing" name="test_custom_arguments" time="0.001" /><testcase classname="tests.test_local_build.TestLocalBuild" name="test_default_donor_dump_behavior" time="0.001"><failure message="AttributeError: module 'src.build' has no attribute 'get_donor_info'">tests/test_local_build.py:39: in test_default_donor_dump_behavior
    info = build.get_donor_info(bdf="0000:00:00.0")  # Only provide BDF
E   AttributeError: module 'src.build' has no attribute 'get_donor_info'</failure></testcase><testcase classname="tests.test_local_build.TestLocalBuild" name="test_get_donor_info_from_file" time="0.001"><failure message="AttributeError: module 'src.build' has no attribute 'get_donor_info'">tests/test_local_build.py:57: in test_get_donor_info_from_file
    info = build.get_donor_info(
E   AttributeError: module 'src.build' has no attribute 'get_donor_info'</failure></testcase><testcase classname="tests.test_local_build.TestLocalBuild" name="test_build_with_skip_donor_dump" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'vivado_run'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'vivado_run'</failure></testcase><testcase classname="tests.test_local_build.TestLocalBuild" name="test_generate_synthetic_donor_info" time="0.001"><failure message="AttributeError: module 'src.build' has no attribute 'get_donor_info'">tests/test_local_build.py:146: in test_generate_synthetic_donor_info
    info = build.get_donor_info(
E   AttributeError: module 'src.build' has no attribute 'get_donor_info'</failure></testcase><testcase classname="tests.test_local_build.TestLocalBuild" name="test_donor_info_file_validation" time="0.001"><failure message="AttributeError: module 'src.build' has no attribute 'get_donor_info'">tests/test_local_build.py:189: in test_donor_info_file_validation
    info = build.get_donor_info(
E   AttributeError: module 'src.build' has no attribute 'get_donor_info'</failure></testcase><testcase classname="tests.test_local_build.TestLocalBuild" name="test_build_without_donor_file" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'vivado_run'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'vivado_run'</failure></testcase><testcase classname="tests.test_local_build.TestBuildOrchestratorLocalBuild" name="test_orchestrator_default_behavior" time="5.516"><failure message="AssertionError: assert '--use-donor-dump' not in 'podman run ...e-donor-dump'&#10;  &#10;  '--use-donor-dump' is contained here:&#10;    podman run --rm -it --privileged --device=/dev/vfio/1 --device=/dev/vfio/vfio -v /Users/ramseymcgrath/code/PCILeechFWGenerator/output:/app/output pcileech-fw-generator:latest python3 /app/src/build.py --bdf 0000:00:00.0 --board 75t --advanced-sv --device-type network --enable-variance --use-donor-dump&#10;  ?                                                                                                                                                                                                                                                                                               ++++++++++++++++">tests/test_local_build.py:317: in test_orchestrator_default_behavior
    assert "--use-donor-dump" not in " ".join(cmd)
E   AssertionError: assert '--use-donor-dump' not in 'podman run ...e-donor-dump'
E     
E     '--use-donor-dump' is contained here:
E       podman run --rm -it --privileged --device=/dev/vfio/1 --device=/dev/vfio/vfio -v /Users/ramseymcgrath/code/PCILeechFWGenerator/output:/app/output pcileech-fw-generator:latest python3 /app/src/build.py --bdf 0000:00:00.0 --board 75t --advanced-sv --device-type network --enable-variance --use-donor-dump
E     ?                                                                                                                                                                                                                                                                                               ++++++++++++++++</failure></testcase><testcase classname="tests.test_local_build.TestBuildOrchestratorLocalBuild" name="test_orchestrator_local_build" time="5.370" /><testcase classname="tests.test_manufacturing_variance.TestDeterministicVarianceSeeding" name="test_boundary_conditions_for_seed_generation" time="0.003" /><testcase classname="tests.test_manufacturing_variance.TestDeterministicVarianceSeeding" name="test_deterministic_rng_initialization" time="0.003" /><testcase classname="tests.test_manufacturing_variance.TestDeterministicVarianceSeeding" name="test_deterministic_seed_generation" time="0.002" /><testcase classname="tests.test_manufacturing_variance.TestDeterministicVarianceSeeding" name="test_deterministic_variance_model" time="0.003" /><testcase classname="tests.test_manufacturing_variance.TestDeterministicVarianceSeeding" name="test_seed_algorithm_correctness" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestDeterministicVarianceSeeding" name="test_seed_with_different_dsn_revision_combinations" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestManufacturingVarianceSimulator" name="test_simulator_initialization" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestManufacturingVarianceSimulator" name="test_variance_model_generation" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestManufacturingVarianceSimulator" name="test_device_class_parameters" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestManufacturingVarianceSimulator" name="test_timing_pattern_analysis" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestManufacturingVarianceSimulator" name="test_variance_application" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestManufacturingVarianceSimulator" name="test_systemverilog_code_generation" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestManufacturingVarianceSimulator" name="test_variance_metadata" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestManufacturingVarianceSimulator" name="test_variance_parameters_dataclass" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestManufacturingVarianceSimulator" name="test_variance_model_timing_calculations" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestManufacturingVarianceSimulator" name="test_reproducible_generation" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestVarianceIntegration" name="test_default_device_class_parameters" time="0.001" /><testcase classname="tests.test_manufacturing_variance.TestVarianceIntegration" name="test_variance_ranges_logical" time="0.001" /><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_build_controller_creation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:41: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_file_manager_creation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:47: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_process_manager_creation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:54: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_systemverilog_generator_creation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:60: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_tcl_generator_creation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:66: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_device_analyzer_creation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:72: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_register_analyzer_creation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:78: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_config_validator_creation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:84: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_config_loader_creation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:90: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_async_file_operations" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:96: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_async_process_operations" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:110: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_config_validation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:120: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_config_loading" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:139: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_systemverilog_generation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:150: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_tcl_generation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:173: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestModularBuildArchitecture" name="test_performance_improvement_estimation" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:197: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestBackwardCompatibility" name="test_build_controller_backward_compatibility" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:224: Modular build system not available</skipped></testcase><testcase classname="tests.test_modular_build.TestBackwardCompatibility" name="test_factory_functions_available" time="0.000"><skipped type="pytest.skip" message="Modular build system not available">/Users/ramseymcgrath/code/PCILeechFWGenerator/tests/test_modular_build.py:234: Modular build system not available</skipped></testcase><testcase classname="tests.test_msix_capability.TestMSIXCapability" name="test_different_table_sizes" time="0.001"><failure message="AssertionError: 0 != 1">tests/test_msix_capability.py:268: in test_different_table_sizes
    self.assertEqual(msix_size(config_1_entry), 1)
E   AssertionError: 0 != 1</failure></testcase><testcase classname="tests.test_msix_capability.TestMSIXCapability" name="test_edge_cases" time="0.001" /><testcase classname="tests.test_msix_capability.TestMSIXCapability" name="test_find_cap" time="0.001"><failure message="AssertionError: None != 64">tests/test_msix_capability.py:147: in test_find_cap
    self.assertEqual(cap_offset, 0x40)
E   AssertionError: None != 64</failure></testcase><testcase classname="tests.test_msix_capability.TestMSIXCapability" name="test_generate_msix_table_sv" time="0.005"><failure message="AssertionError: 'localparam NUM_MSIX = 8;' not found in '// MSI-X not supported or no entries'">tests/test_msix_capability.py:219: in test_generate_msix_table_sv
    self.assertIn("localparam NUM_MSIX = 8;", sv_code)
E   AssertionError: 'localparam NUM_MSIX = 8;' not found in '// MSI-X not supported or no entries'</failure></testcase><testcase classname="tests.test_msix_capability.TestMSIXCapability" name="test_helper_functions" time="0.004" /><testcase classname="tests.test_msix_capability.TestMSIXCapability" name="test_msix_size" time="0.002"><failure message="AssertionError: 0 != 8">tests/test_msix_capability.py:172: in test_msix_size
    self.assertEqual(size, 8)  # 7 + 1 = 8 entries
E   AssertionError: 0 != 8</failure></testcase><testcase classname="tests.test_msix_capability.TestMSIXCapability" name="test_parse_msix_capability" time="0.002"><failure message="AssertionError: 0 != 8">tests/test_msix_capability.py:191: in test_parse_msix_capability
    self.assertEqual(msix_info["table_size"], 8)
E   AssertionError: 0 != 8</failure></testcase><testcase classname="tests.test_option_rom.TestOptionROMManager" name="test_extract_rom_linux_failure" time="0.002" /><testcase classname="tests.test_option_rom.TestOptionROMManager" name="test_extract_rom_linux_success" time="0.002" /><testcase classname="tests.test_option_rom.TestOptionROMManager" name="test_get_rom_info" time="0.002" /><testcase classname="tests.test_option_rom.TestOptionROMManager" name="test_load_rom_file_failure" time="0.003" /><testcase classname="tests.test_option_rom.TestOptionROMManager" name="test_load_rom_file_success" time="0.003" /><testcase classname="tests.test_option_rom.TestOptionROMManager" name="test_save_rom_hex" time="0.002" /><testcase classname="tests.test_option_rom.TestOptionROMManager" name="test_setup_option_rom" time="0.002" /><testcase classname="tests.test_option_rom" name="test_option_rom_size_variants[65536]" time="0.011" /><testcase classname="tests.test_option_rom" name="test_option_rom_size_variants[131072]" time="0.021" /><testcase classname="tests.test_option_rom" name="test_option_rom_size_variants[262144]" time="0.039" /><testcase classname="tests.test_pci_capability.TestPCICapability" name="test_categorize_capabilities" time="0.001" /><testcase classname="tests.test_pci_capability.TestPCICapability" name="test_determine_pruning_actions" time="0.001" /><testcase classname="tests.test_pci_capability.TestPCICapability" name="test_find_cap" time="0.001" /><testcase classname="tests.test_pci_capability.TestPCICapability" name="test_find_ext_cap" time="0.001" /><testcase classname="tests.test_pci_capability.TestPCICapability" name="test_get_all_capabilities" time="0.001" /><testcase classname="tests.test_pci_capability.TestPCICapability" name="test_get_all_ext_capabilities" time="0.001" /><testcase classname="tests.test_pci_capability.TestPCICapability" name="test_prune_capabilities" time="0.003" /><testcase classname="tests.test_pci_capability.TestPCICapability" name="test_prune_capabilities_by_rules" time="0.003" /><testcase classname="tests.test_pci_validation.TestPCIValidation" name="test_validate_donor_info_complete" time="0.001"><failure message="AttributeError: module 'src.build' has no attribute 'validate_donor_info'">tests/test_pci_validation.py:49: in test_validate_donor_info_complete
    result = build.validate_donor_info(complete_info)
E   AttributeError: module 'src.build' has no attribute 'validate_donor_info'</failure></testcase><testcase classname="tests.test_pci_validation.TestPCIValidation" name="test_validate_donor_info_missing_critical" time="0.001"><failure message="AttributeError: module 'src.build' has no attribute 'validate_donor_info'">tests/test_pci_validation.py:68: in test_validate_donor_info_missing_critical
    build.validate_donor_info(incomplete_info)
E   AttributeError: module 'src.build' has no attribute 'validate_donor_info'</failure></testcase><testcase classname="tests.test_pci_validation.TestPCIValidation" name="test_validate_donor_info_missing_extended" time="0.001"><failure message="AttributeError: module 'src.build' has no attribute 'validate_donor_info'">tests/test_pci_validation.py:86: in test_validate_donor_info_missing_extended
    result = build.validate_donor_info(basic_info)
E   AttributeError: module 'src.build' has no attribute 'validate_donor_info'</failure></testcase><testcase classname="tests.test_pci_validation.TestPCIValidation" name="test_validate_donor_info_invalid_format" time="0.001"><failure message="AttributeError: module 'src.build' has no attribute 'validate_donor_info'">tests/test_pci_validation.py:105: in test_validate_donor_info_invalid_format
    result = build.validate_donor_info(invalid_info)
E   AttributeError: module 'src.build' has no attribute 'validate_donor_info'</failure></testcase><testcase classname="tests.test_pci_validation.TestPCIValidation" name="test_get_donor_info_calls_validation" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'validate_donor_info'">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1421: in patched
    with self.decoration_helper(patched,
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:141: in __enter__
    return next(self.gen)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1403: in decoration_helper
    arg = exit_stack.enter_context(patching)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/contextlib.py:530: in enter_context
    result = _enter(cm)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'validate_donor_info'</failure></testcase><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_ensure_git_repo_clone_failure" time="0.001"><failure message="AssertionError: 'Failed to clone' not found in 'Git not found in PATH'">tests/test_repo_manager.py:185: in test_ensure_git_repo_clone_failure
    self.assertIn("Failed to clone", str(context.exception))
E   AssertionError: 'Failed to clone' not found in 'Git not found in PATH'</failure></testcase><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_ensure_git_repo_clone_new" time="0.003" /><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_ensure_git_repo_corrupted_repo" time="0.001"><failure message="AssertionError: 'Repository appears to be corrupted' not found in 'Git not found in PATH'">tests/test_repo_manager.py:284: in test_ensure_git_repo_corrupted_repo
    self.assertIn("Repository appears to be corrupted", str(context.exception))
E   AssertionError: 'Repository appears to be corrupted' not found in 'Git not found in PATH'</failure></testcase><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_ensure_git_repo_existing_repo" time="0.001"><failure message="AssertionError: False is not true">tests/test_repo_manager.py:93: in test_ensure_git_repo_existing_repo
    self.assertTrue(
E   AssertionError: False is not true</failure></testcase><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_ensure_git_repo_git_not_available" time="0.001"><failure message="AssertionError: 'Git is not available' not found in 'Git not found in PATH'">tests/test_repo_manager.py:171: in test_ensure_git_repo_git_not_available
    self.assertIn("Git is not available", str(context.exception))
E   AssertionError: 'Git is not available' not found in 'Git not found in PATH'</failure></testcase><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_ensure_git_repo_network_error" time="0.001"><failure message="AssertionError: 'Failed to clone' not found in 'Git not found in PATH'">tests/test_repo_manager.py:266: in test_ensure_git_repo_network_error
    self.assertIn("Failed to clone", str(context.exception))
E   AssertionError: 'Failed to clone' not found in 'Git not found in PATH'</failure></testcase><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_ensure_git_repo_permission_error" time="0.001"><failure message="PermissionError: Permission denied">tests/test_repo_manager.py:244: in test_ensure_git_repo_permission_error
    RepoManager.ensure_git_repo()
src/repo_manager.py:58: in ensure_git_repo
    result = cls.run_command("git --version")
src/repo_manager.py:38: in run_command
    return subprocess.run(
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1167: in __call__
    return self._mock_call(*args, **kwargs)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1171: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1226: in _execute_mock_call
    raise effect
E   PermissionError: Permission denied</failure></testcase><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_ensure_git_repo_update_existing" time="0.002"><failure message="AssertionError: False is not true">tests/test_repo_manager.py:159: in test_ensure_git_repo_update_existing
    self.assertTrue(
E   AssertionError: False is not true</failure></testcase><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_get_board_path_invalid_board" time="0.017"><failure message="RuntimeError: Failed to clone PCILeech FPGA repository: Command 'git clone https://github.com/ufrisk/pcileech-fpga.git /tmp/test-repo' returned non-zero exit status 128.">src/repo_manager.py:116: in ensure_git_repo
    result = cls.run_command(f"git clone {PCILEECH_FPGA_REPO} {repo_dir}")
src/repo_manager.py:38: in run_command
    return subprocess.run(
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/subprocess.py:579: in run
    raise CalledProcessError(retcode, process.args,
E   subprocess.CalledProcessError: Command 'git clone https://github.com/ufrisk/pcileech-fpga.git /tmp/test-repo' returned non-zero exit status 128.

During handling of the above exception, another exception occurred:
tests/test_repo_manager.py:206: in test_get_board_path_invalid_board
    RepoManager.get_board_path("invalid_board")
src/repo_manager.py:143: in get_board_path
    cls.ensure_git_repo()
src/repo_manager.py:124: in ensure_git_repo
    raise RuntimeError(
E   RuntimeError: Failed to clone PCILeech FPGA repository: Command 'git clone https://github.com/ufrisk/pcileech-fpga.git /tmp/test-repo' returned non-zero exit status 128.</failure></testcase><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_get_board_path_multiple_locations" time="0.014"><failure message="RuntimeError: Failed to clone PCILeech FPGA repository: Command 'git clone https://github.com/ufrisk/pcileech-fpga.git /tmp/test-repo' returned non-zero exit status 128.">src/repo_manager.py:116: in ensure_git_repo
    result = cls.run_command(f"git clone {PCILEECH_FPGA_REPO} {repo_dir}")
src/repo_manager.py:38: in run_command
    return subprocess.run(
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/subprocess.py:579: in run
    raise CalledProcessError(retcode, process.args,
E   subprocess.CalledProcessError: Command 'git clone https://github.com/ufrisk/pcileech-fpga.git /tmp/test-repo' returned non-zero exit status 128.

During handling of the above exception, another exception occurred:
tests/test_repo_manager.py:226: in test_get_board_path_multiple_locations
    board_path = RepoManager.get_board_path("75t")
src/repo_manager.py:143: in get_board_path
    cls.ensure_git_repo()
src/repo_manager.py:124: in ensure_git_repo
    raise RuntimeError(
E   RuntimeError: Failed to clone PCILeech FPGA repository: Command 'git clone https://github.com/ufrisk/pcileech-fpga.git /tmp/test-repo' returned non-zero exit status 128.</failure></testcase><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_get_board_path_valid_board" time="0.009"><failure message="RuntimeError: Board directory not found: /tmp/test-repo/PCIeEnigmaX1&#10;Make sure the pcileech-fpga repository is properly cloned.">tests/test_repo_manager.py:194: in test_get_board_path_valid_board
    board_path = RepoManager.get_board_path("75t")
src/repo_manager.py:168: in get_board_path
    raise RuntimeError(
E   RuntimeError: Board directory not found: /tmp/test-repo/PCIeEnigmaX1
E   Make sure the pcileech-fpga repository is properly cloned.</failure></testcase><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_repo_constants" time="0.001" /><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_run_command_failure" time="0.001" /><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_run_command_success" time="0.001" /><testcase classname="tests.test_repo_manager.TestRepoManager" name="test_run_command_with_kwargs" time="0.001" /><testcase classname="tests.test_repo_manager.TestRepoManagerIntegration" name="test_full_workflow_existing_repo" time="0.002" /><testcase classname="tests.test_repo_manager.TestRepoManagerIntegration" name="test_full_workflow_new_repo" time="0.002" /><testcase classname="tests.test_state_machine_extractor.TestStateTransition" name="test_state_transition_init" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateTransition" name="test_state_transition_init_with_custom_values" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateTransition" name="test_to_dict" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachine" name="test_state_machine_init" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachine" name="test_add_state" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachine" name="test_add_transition" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachine" name="test_calculate_complexity" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachine" name="test_to_dict" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachine" name="test_generate_systemverilog" time="0.001"><failure message="assert 'typedef enum logic' in &quot;\n    // State machine: {self.name}\n    {state_enum}\n\n    {self.name}_state_t {self.name}_current_state = {self.initial_state.upper() if self.initial_state else list(self.states)[0].upper()};\n    {self.name}_state_t {self.name}_next_state;\n\n    // State transition logic for {self.name}\n    always_ff @(posedge clk) begin\n        if (!reset_n) begin\n            {self.name}_current_state &lt;= {self.initial_state.upper() if self.initial_state else list(self.states)[0].upper()};\n        end else begin\n            {self.name}_current_state &lt;= {self.name}_next_state;\n        end\n    end\n\n    // Next state combinational logic for {self.name}\n    always_comb begin\n        {self.name}_next_state = {self.name}_current_state;\n        case ({self.name}_current_state)\n            ACTIVE: begin\n                if (data_ready) test_sm_next_state = DONE;\n            end\n            DONE: begin\n            end\n            IDLE: begin\n                if (bar_wr_en &amp;&amp; bar_addr == 32'h00001000) test_sm_next_state = ACTIVE;\n            end\n            default: {self.name}_next_state = {self.initial_state.upper() if self.initial_state else list(self.states)[0].upper()};\n        endcase\n    end&quot;">tests/test_state_machine_extractor.py:252: in test_generate_systemverilog
    assert "typedef enum logic" in sv_code
E   assert 'typedef enum logic' in "\n    // State machine: {self.name}\n    {state_enum}\n\n    {self.name}_state_t {self.name}_current_state = {self.initial_state.upper() if self.initial_state else list(self.states)[0].upper()};\n    {self.name}_state_t {self.name}_next_state;\n\n    // State transition logic for {self.name}\n    always_ff @(posedge clk) begin\n        if (!reset_n) begin\n            {self.name}_current_state &lt;= {self.initial_state.upper() if self.initial_state else list(self.states)[0].upper()};\n        end else begin\n            {self.name}_current_state &lt;= {self.name}_next_state;\n        end\n    end\n\n    // Next state combinational logic for {self.name}\n    always_comb begin\n        {self.name}_next_state = {self.name}_current_state;\n        case ({self.name}_current_state)\n            ACTIVE: begin\n                if (data_ready) test_sm_next_state = DONE;\n            end\n            DONE: begin\n            end\n            IDLE: begin\n                if (bar_wr_en &amp;&amp; bar_addr == 32'h00001000) test_sm_next_state = ACTIVE;\n            end\n            default: {self.name}_next_state = {self.initial_state.upper() if self.initial_state else list(self.states)[0].upper()};\n        endcase\n    end"</failure></testcase><testcase classname="tests.test_state_machine_extractor.TestStateMachine" name="test_generate_transition_condition" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_init" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_extract_functions" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_extract_explicit_state_machine_switch" time="0.002" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_extract_explicit_state_machine_if_chain" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_extract_implicit_state_machine" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_extract_global_state_machine" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_extract_transitions_from_code" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_find_delay_between_positions" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_categorize_function" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_get_state_type_for_category" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_optimize_state_machines" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_generate_analysis_report" time="0.001" /><testcase classname="tests.test_state_machine_extractor.TestStateMachineExtractor" name="test_extract_state_machines_integration" time="0.001" /><testcase classname="tests.test_sv_validation.TestSystemVerilogValidation" name="test_sv_module_structure_matches_example" time="0.120"><failure message="TypeError: int() can't convert non-string with explicit base">tests/test_sv_validation.py:89: in test_sv_module_structure_matches_example
    sv_content = generator.generate_advanced_systemverilog(mock_register_data)
src/systemverilog_generator.py:515: in generate_advanced_systemverilog
    self.generate_register_logic(regs, variance_model)
src/systemverilog_generator.py:285: in generate_register_logic
    else int(reg["offset"], 16)
E   TypeError: int() can't convert non-string with explicit base</failure></testcase><testcase classname="tests.test_sv_validation.TestSystemVerilogValidation" name="test_sv_register_handling_matches_example" time="0.122"><failure message="TypeError: int() can't convert non-string with explicit base">tests/test_sv_validation.py:117: in test_sv_register_handling_matches_example
    sv_content = generator.generate_advanced_systemverilog(mock_register_data)
src/systemverilog_generator.py:515: in generate_advanced_systemverilog
    self.generate_register_logic(regs, variance_model)
src/systemverilog_generator.py:285: in generate_register_logic
    else int(reg["offset"], 16)
E   TypeError: int() can't convert non-string with explicit base</failure></testcase><testcase classname="tests.test_sv_validation.TestSystemVerilogValidation" name="test_sv_clock_domain_handling" time="0.124"><failure message="TypeError: int() can't convert non-string with explicit base">tests/test_sv_validation.py:155: in test_sv_clock_domain_handling
    sv_content = generator.generate_advanced_systemverilog(regs)
src/systemverilog_generator.py:515: in generate_advanced_systemverilog
    self.generate_register_logic(regs, variance_model)
src/systemverilog_generator.py:285: in generate_register_logic
    else int(reg["offset"], 16)
E   TypeError: int() can't convert non-string with explicit base</failure></testcase><testcase classname="tests.test_sv_validation.TestSystemVerilogValidation" name="test_sv_interface_compatibility" time="0.103"><failure message="TypeError: int() can't convert non-string with explicit base">tests/test_sv_validation.py:184: in test_sv_interface_compatibility
    sv_content = generator.generate_advanced_systemverilog(regs)
src/systemverilog_generator.py:515: in generate_advanced_systemverilog
    self.generate_register_logic(regs, variance_model)
src/systemverilog_generator.py:285: in generate_register_logic
    else int(reg["offset"], 16)
E   TypeError: int() can't convert non-string with explicit base</failure></testcase><testcase classname="tests.test_sv_validation.TestSystemVerilogValidation" name="test_sv_error_handling_compatibility" time="0.112" /><testcase classname="tests.test_sv_validation.TestAdvancedSVFeatureValidation" name="test_state_machine_generation" time="0.121"><failure message="TypeError: int() can't convert non-string with explicit base">tests/test_sv_validation.py:283: in test_state_machine_generation
    sv_content = generator.generate_advanced_systemverilog(regs)
src/systemverilog_generator.py:515: in generate_advanced_systemverilog
    self.generate_register_logic(regs, variance_model)
src/systemverilog_generator.py:285: in generate_register_logic
    else int(reg["offset"], 16)
E   TypeError: int() can't convert non-string with explicit base</failure></testcase><testcase classname="tests.test_sv_validation.TestAdvancedSVFeatureValidation" name="test_memory_interface_compatibility" time="0.123"><failure message="TypeError: int() can't convert non-string with explicit base">tests/test_sv_validation.py:325: in test_memory_interface_compatibility
    sv_content = generator.generate_advanced_systemverilog(regs)
src/systemverilog_generator.py:515: in generate_advanced_systemverilog
    self.generate_register_logic(regs, variance_model)
src/systemverilog_generator.py:285: in generate_register_logic
    else int(reg["offset"], 16)
E   TypeError: int() can't convert non-string with explicit base</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_advanced_sv_integration" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_bar_size_handling" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_behavior_profiling_integration" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_clock_domain_generation" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_configuration_space_shadow" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_device_specific_optimizations" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_error_handling_in_systemverilog" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_error_recovery_in_generation" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_generate_device_config_module_basic" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_generate_device_config_module_with_msix" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_generate_top_level_wrapper_basic" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_generate_top_level_wrapper_with_advanced_features" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_interrupt_handling_generation" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_manufacturing_variance_integration" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_memory_interface_generation" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_power_management_integration" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_register_logic_generation" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_systemverilog_file_discovery" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_systemverilog_file_generation_integration" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogGeneration" name="test_systemverilog_syntax_validation" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'">tests/test_systemverilog_generation.py:28: in setUp
    patch("src.build.ManufacturingVarianceSimulator", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'ManufacturingVarianceSimulator'</failure></testcase><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogValidation" name="test_always_block_validation" time="0.001" /><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogValidation" name="test_case_statement_validation" time="0.001" /><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogValidation" name="test_module_structure_validation" time="0.001" /><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogValidation" name="test_parameter_validation" time="0.001" /><testcase classname="tests.test_systemverilog_generation.TestSystemVerilogValidation" name="test_signal_declaration_validation" time="0.001" /><testcase classname="tests.test_tcl_builder.TestTCLBuilderInitialization" name="test_init_with_custom_directories" time="0.002" /><testcase classname="tests.test_tcl_builder.TestTCLBuilderInitialization" name="test_init_with_default_directories" time="0.001" /><testcase classname="tests.test_tcl_builder.TestTCLBuilderInitialization" name="test_init_creates_output_directory" time="0.001" /><testcase classname="tests.test_tcl_builder.TestContextPreparation" name="test_prepare_base_context_with_known_board" time="0.002" /><testcase classname="tests.test_tcl_builder.TestContextPreparation" name="test_prepare_base_context_with_explicit_fpga_part" time="0.002" /><testcase classname="tests.test_tcl_builder.TestContextPreparation" name="test_prepare_base_context_with_default_values" time="0.002" /><testcase classname="tests.test_tcl_builder.TestContextPreparation" name="test_prepare_base_context_invalid_fpga_part" time="0.002" /><testcase classname="tests.test_tcl_builder.TestContextPreparation" name="test_prepare_base_context_fpga_strategy_integration" time="0.002" /><testcase classname="tests.test_tcl_builder.TestTCLGenerationMethods" name="test_build_project_setup_tcl_with_template" time="0.003" /><testcase classname="tests.test_tcl_builder.TestTCLGenerationMethods" name="test_build_project_setup_tcl_fallback" time="0.002"><failure message="Exception: Template not found">tests/test_tcl_builder.py:255: in test_build_project_setup_tcl_fallback
    result = tcl_builder.build_project_setup_tcl(context)
src/tcl_builder.py:186: in build_project_setup_tcl
    return self.template_renderer.render_template(
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1167: in __call__
    return self._mock_call(*args, **kwargs)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1171: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1226: in _execute_mock_call
    raise effect
E   Exception: Template not found</failure></testcase><testcase classname="tests.test_tcl_builder.TestTCLGenerationMethods" name="test_build_ip_config_tcl_with_template" time="0.003" /><testcase classname="tests.test_tcl_builder.TestTCLGenerationMethods" name="test_build_sources_tcl_with_files" time="0.002" /><testcase classname="tests.test_tcl_builder.TestTCLGenerationMethods" name="test_build_sources_tcl_no_files" time="0.002" /><testcase classname="tests.test_tcl_builder.TestTCLGenerationMethods" name="test_build_constraints_tcl_with_files" time="0.002" /><testcase classname="tests.test_tcl_builder.TestTCLGenerationMethods" name="test_build_synthesis_tcl" time="0.002" /><testcase classname="tests.test_tcl_builder.TestTCLGenerationMethods" name="test_build_implementation_tcl" time="0.002" /><testcase classname="tests.test_tcl_builder.TestTCLGenerationMethods" name="test_build_bitstream_tcl" time="0.002" /><testcase classname="tests.test_tcl_builder.TestTCLGenerationMethods" name="test_build_master_tcl" time="0.003" /><testcase classname="tests.test_tcl_builder.TestFallbackMethods" name="test_fallback_project_setup" time="0.002" /><testcase classname="tests.test_tcl_builder.TestFallbackMethods" name="test_fallback_ip_config" time="0.002" /><testcase classname="tests.test_tcl_builder.TestFallbackMethods" name="test_fallback_sources" time="0.002" /><testcase classname="tests.test_tcl_builder.TestFallbackMethods" name="test_fallback_constraints" time="0.002" /><testcase classname="tests.test_tcl_builder.TestFallbackMethods" name="test_fallback_synthesis" time="0.002" /><testcase classname="tests.test_tcl_builder.TestFallbackMethods" name="test_fallback_implementation" time="0.002" /><testcase classname="tests.test_tcl_builder.TestFallbackMethods" name="test_fallback_bitstream" time="0.002" /><testcase classname="tests.test_tcl_builder.TestFallbackMethods" name="test_fallback_master_build" time="0.002" /><testcase classname="tests.test_tcl_builder.TestBuildAllTclScripts" name="test_build_all_tcl_scripts_success" time="0.003"><failure message="IndexError: list index out of range">tests/test_tcl_builder.py:465: in test_build_all_tcl_scripts_success
    results = tcl_builder.build_all_tcl_scripts(
src/tcl_builder.py:361: in build_all_tcl_scripts
    TCL_SCRIPT_FILES[2]: self.build_sources_tcl(context, source_files),
E   IndexError: list index out of range</failure></testcase><testcase classname="tests.test_tcl_builder.TestBuildAllTclScripts" name="test_build_all_tcl_scripts_with_source_files" time="0.006" /><testcase classname="tests.test_tcl_builder.TestBuildAllTclScripts" name="test_build_all_tcl_scripts_auto_detect_fpga_part" time="0.006" /><testcase classname="tests.test_tcl_builder.TestBuildAllTclScripts" name="test_build_all_tcl_scripts_partial_failure" time="0.006" /><testcase classname="tests.test_tcl_builder.TestUtilityMethods" name="test_get_generated_files" time="0.002" /><testcase classname="tests.test_tcl_builder.TestUtilityMethods" name="test_clean_generated_files" time="0.002" /><testcase classname="tests.test_tcl_builder.TestUtilityMethods" name="test_clean_generated_files_missing_files" time="0.002" /><testcase classname="tests.test_tcl_builder.TestUtilityMethods" name="test_clean_generated_files_permission_error" time="0.002" /><testcase classname="tests.test_tcl_builder.TestConvenienceFunction" name="test_generate_tcl_scripts_success" time="0.001" /><testcase classname="tests.test_tcl_builder.TestConvenienceFunction" name="test_generate_tcl_scripts_with_all_parameters" time="0.001" /><testcase classname="tests.test_tcl_builder.TestErrorHandling" name="test_template_renderer_initialization_error" time="0.001" /><testcase classname="tests.test_tcl_builder.TestErrorHandling" name="test_fpga_strategy_selector_error" time="0.002" /><testcase classname="tests.test_tcl_builder.TestErrorHandling" name="test_template_rendering_error_fallback" time="0.002"><failure message="Exception: Template error">tests/test_tcl_builder.py:666: in test_template_rendering_error_fallback
    result = tcl_builder.build_project_setup_tcl(context)
src/tcl_builder.py:186: in build_project_setup_tcl
    return self.template_renderer.render_template(
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1167: in __call__
    return self._mock_call(*args, **kwargs)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1171: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1226: in _execute_mock_call
    raise effect
E   Exception: Template error</failure></testcase><testcase classname="tests.test_tcl_builder.TestErrorHandling" name="test_batch_write_error_handling" time="0.006" /><testcase classname="tests.test_tcl_builder.TestIntegrationScenarios" name="test_complete_build_workflow" time="0.004" /><testcase classname="tests.test_tcl_builder.TestIntegrationScenarios" name="test_different_fpga_families" time="0.002" /><testcase classname="tests.test_tcl_builder.TestIntegrationScenarios" name="test_template_vs_fallback_consistency" time="0.002" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_axi_pcie_config" time="0.001" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_bitstream_tcl" time="0.004"><failure message="AssertionError: 'set_property' not found in '#==============================================================================\n# PCILeech Firmware Build Script\n# Generated for device 0x8086:0x1533 (Class: 0x020000)\n# Board: 75t\n# FPGA Part: xc7a75tfgg484-2\n# Generated: 2025-06-15 01:42:41\n#==============================================================================\n\nputs &quot;Generating bitstream...&quot;\nlaunch_runs impl_1 -to_step write_bitstream -jobs 8\nwait_on_run impl_1\n\n# Check bitstream generation\nset bitstream_file &quot;./vivado_project/pcileech_firmware.runs/impl_1/[get_property top [current_fileset]].bit&quot;\nif {[file exists $bitstream_file]} {\n    set output_bit &quot;pcileech_0x8086_0x1533_75t.bit&quot;\n    file copy -force $bitstream_file $output_bit\n    puts &quot;SUCCESS: Bitstream generated successfully!&quot;\n    puts &quot;Output file: $output_bit&quot;\n\n    # Generate additional files\n    write_cfgmem -format mcs -size 16 -interface SPIx4 \\\n        -loadbit &quot;up 0x0 $output_bit&quot; \\\n        -file &quot;pcileech_0x8086_0x1533_75t.mcs&quot;\n\n    if {[llength [get_debug_cores]] &gt; 0} {\n        write_debug_probes -file &quot;pcileech_0x8086_0x1533_75t.ltx&quot;\n    }\n\n    write_checkpoint -force &quot;pcileech_0x8086_0x1533_75t.dcp&quot;\n\n    puts &quot;Generated files:&quot;\n    puts &quot;  - Bitstream: pcileech_0x8086_0x1533_75t.bit&quot;\n    puts &quot;  - MCS file: pcileech_0x8086_0x1533_75t.mcs&quot;\n    puts &quot;  - Checkpoint: pcileech_0x8086_0x1533_75t.dcp&quot;\n    puts &quot;  - Reports: *.rpt&quot;\n} else {\n    puts &quot;ERROR: Bitstream generation failed!&quot;\n    exit 1\n}\n\nputs &quot;Bitstream generation completed successfully!&quot;'">tests/test_tcl_generation.py:232: in test_generate_bitstream_tcl
    self.assertIn("set_property", tcl_content)
E   AssertionError: 'set_property' not found in '#==============================================================================\n# PCILeech Firmware Build Script\n# Generated for device 0x8086:0x1533 (Class: 0x020000)\n# Board: 75t\n# FPGA Part: xc7a75tfgg484-2\n# Generated: 2025-06-15 01:42:41\n#==============================================================================\n\nputs "Generating bitstream..."\nlaunch_runs impl_1 -to_step write_bitstream -jobs 8\nwait_on_run impl_1\n\n# Check bitstream generation\nset bitstream_file "./vivado_project/pcileech_firmware.runs/impl_1/[get_property top [current_fileset]].bit"\nif {[file exists $bitstream_file]} {\n    set output_bit "pcileech_0x8086_0x1533_75t.bit"\n    file copy -force $bitstream_file $output_bit\n    puts "SUCCESS: Bitstream generated successfully!"\n    puts "Output file: $output_bit"\n\n    # Generate additional files\n    write_cfgmem -format mcs -size 16 -interface SPIx4 \\\n        -loadbit "up 0x0 $output_bit" \\\n        -file "pcileech_0x8086_0x1533_75t.mcs"\n\n    if {[llength [get_debug_cores]] &gt; 0} {\n        write_debug_probes -file "pcileech_0x8086_0x1533_75t.ltx"\n    }\n\n    write_checkpoint -force "pcileech_0x8086_0x1533_75t.dcp"\n\n    puts "Generated files:"\n    puts "  - Bitstream: pcileech_0x8086_0x1533_75t.bit"\n    puts "  - MCS file: pcileech_0x8086_0x1533_75t.mcs"\n    puts "  - Checkpoint: pcileech_0x8086_0x1533_75t.dcp"\n    puts "  - Reports: *.rpt"\n} else {\n    puts "ERROR: Bitstream generation failed!"\n    exit 1\n}\n\nputs "Bitstream generation completed successfully!"'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_constraints_tcl" time="0.002" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_device_tcl_script_basic" time="0.008" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_device_tcl_script_with_board_specific_settings" time="0.008" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_implementation_tcl" time="0.001"><failure message="AssertionError: 'opt_design' not found in '#==============================================================================\n# PCILeech Firmware Build Script\n# Generated for device 0x8086:0x1533 (Class: 0x020000)\n# Board: 75t\n# FPGA Part: xc7a75tfgg484-2\n# Generated: 2025-06-15 01:42:41\n#==============================================================================\n\nputs &quot;Configuring implementation settings...&quot;\nset_property strategy &quot;Performance_Explore&quot; [get_runs impl_1]\n\nputs &quot;Starting implementation...&quot;\nlaunch_runs impl_1 -jobs 8\nwait_on_run impl_1\n\nif {[get_property PROGRESS [get_runs impl_1]] != &quot;100%&quot;} {\n    puts &quot;ERROR: Implementation failed!&quot;\n    exit 1\n}\n\nputs &quot;Implementation completed successfully&quot;\n\n# Generate implementation reports\nputs &quot;Generating reports...&quot;\nopen_run impl_1\nreport_timing_summary -file timing_summary.rpt\nreport_utilization -file utilization_impl.rpt\nreport_power -file power_analysis.rpt\nreport_drc -file drc_report.rpt'">tests/test_tcl_generation.py:215: in test_generate_implementation_tcl
    self.assertIn("opt_design", tcl_content)
E   AssertionError: 'opt_design' not found in '#==============================================================================\n# PCILeech Firmware Build Script\n# Generated for device 0x8086:0x1533 (Class: 0x020000)\n# Board: 75t\n# FPGA Part: xc7a75tfgg484-2\n# Generated: 2025-06-15 01:42:41\n#==============================================================================\n\nputs "Configuring implementation settings..."\nset_property strategy "Performance_Explore" [get_runs impl_1]\n\nputs "Starting implementation..."\nlaunch_runs impl_1 -jobs 8\nwait_on_run impl_1\n\nif {[get_property PROGRESS [get_runs impl_1]] != "100%"} {\n    puts "ERROR: Implementation failed!"\n    exit 1\n}\n\nputs "Implementation completed successfully"\n\n# Generate implementation reports\nputs "Generating reports..."\nopen_run impl_1\nreport_timing_summary -file timing_summary.rpt\nreport_utilization -file utilization_impl.rpt\nreport_power -file power_analysis.rpt\nreport_drc -file drc_report.rpt'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_ip_config_tcl" time="0.002" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_master_build_tcl" time="0.002" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_pcie_7x_config" time="0.002" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_pcie_ultrascale_config" time="0.001" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_project_setup_tcl" time="0.002" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_separate_tcl_files" time="0.010" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_sources_tcl" time="0.001" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_generate_synthesis_tcl" time="0.001" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_board_specific_constraints" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:356: in test_tcl_board_specific_constraints
    tcl_content = self.tcl_generator.generate_constraints_tcl(device_info)
src/tcl_generator.py:245: in generate_constraints_tcl
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_build_optimization" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:402: in test_tcl_build_optimization
    tcl_content = self.tcl_generator.generate_synthesis_tcl(device_info)
src/tcl_generator.py:250: in generate_synthesis_tcl
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_clock_management" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:445: in test_tcl_clock_management
    tcl_content = self.tcl_generator.generate_ip_config_tcl(device_info)
src/tcl_generator.py:234: in generate_ip_config_tcl
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_cross_platform_compatibility" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:494: in test_tcl_cross_platform_compatibility
    tcl_content = self.tcl_generator.generate_sources_tcl(device_info)
src/tcl_generator.py:240: in generate_sources_tcl
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_debug_features" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:415: in test_tcl_debug_features
    tcl_content = self.tcl_generator.generate_device_tcl_script(device_info)
src/tcl_generator.py:134: in generate_device_tcl_script
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_error_handling" time="0.001" /><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_file_organization" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:471: in test_tcl_file_organization
    tcl_files = self.tcl_generator.generate_separate_tcl_files(device_info)
src/tcl_generator.py:181: in generate_separate_tcl_files
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_ip_customization" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:386: in test_tcl_ip_customization
    tcl_content = self.tcl_generator.generate_ip_config_tcl(device_info)
src/tcl_generator.py:234: in generate_ip_config_tcl
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_memory_controller_integration" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:428: in test_tcl_memory_controller_integration
    tcl_content = self.tcl_generator.generate_ip_config_tcl(device_info)
src/tcl_generator.py:234: in generate_ip_config_tcl
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_power_analysis_integration" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:458: in test_tcl_power_analysis_integration
    tcl_content = self.tcl_generator.generate_implementation_tcl(device_info)
src/tcl_generator.py:255: in generate_implementation_tcl
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_syntax_validation" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:293: in test_tcl_syntax_validation
    tcl_content = self.tcl_generator.generate_device_tcl_script(device_info)
src/tcl_generator.py:134: in generate_device_tcl_script
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_timing_constraints" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:373: in test_tcl_timing_constraints
    tcl_content = self.tcl_generator.generate_constraints_tcl(device_info)
src/tcl_generator.py:245: in generate_constraints_tcl
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_variable_substitution" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:316: in test_tcl_variable_substitution
    tcl_content = self.tcl_generator.generate_project_setup_tcl(device_info)
src/tcl_generator.py:229: in generate_project_setup_tcl
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLGeneration" name="test_tcl_version_compatibility" time="0.001"><failure message="KeyError: 'class_code'">tests/test_tcl_generation.py:507: in test_tcl_version_compatibility
    tcl_content = self.tcl_generator.generate_device_tcl_script(device_info)
src/tcl_generator.py:134: in generate_device_tcl_script
    context = self._get_template_context(device_info)
src/tcl_generator.py:94: in _get_template_context
    class_code=device_info["class_code"],
E   KeyError: 'class_code'</failure></testcase><testcase classname="tests.test_tcl_generation.TestTCLScriptIntegration" name="test_complete_tcl_workflow" time="0.001"><failure message="AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'MSIXCapabilityManager'">tests/test_tcl_generation.py:540: in test_complete_tcl_workflow
    patch("src.build.MSIXCapabilityManager", None),
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1495: in __enter__
    original, local = self.get_original()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1465: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'src.build' from '/Users/ramseymcgrath/code/PCILeechFWGenerator/src/build.py'&gt; does not have the attribute 'MSIXCapabilityManager'</failure></testcase><testcase classname="tests.test_tcl_generation_core.TestTCLGenerationCore" name="test_generate_axi_pcie_config" time="0.001" /><testcase classname="tests.test_tcl_generation_core.TestTCLGenerationCore" name="test_generate_device_tcl_script_basic" time="0.008" /><testcase classname="tests.test_tcl_generation_core.TestTCLGenerationCore" name="test_generate_ip_config_tcl" time="0.002" /><testcase classname="tests.test_tcl_generation_core.TestTCLGenerationCore" name="test_generate_pcie_7x_config" time="0.002" /><testcase classname="tests.test_tcl_generation_core.TestTCLGenerationCore" name="test_generate_project_setup_tcl" time="0.002" /><testcase classname="tests.test_tcl_generation_core.TestTCLGenerationCore" name="test_hex_prefix_handling" time="0.001" /><testcase classname="tests.test_tcl_generation_core.TestTCLGenerationCore" name="test_template_fallback_mechanism" time="0.009" /><testcase classname="tests.test_tcl_templates.TestEnhancedTCLGenerator" name="test_board_config_integration" time="0.001" /><testcase classname="tests.test_tcl_templates.TestEnhancedTCLGenerator" name="test_enhanced_generator_initialization" time="0.001" /><testcase classname="tests.test_tcl_templates.TestEnhancedTCLGenerator" name="test_context_building" time="0.001" /><testcase classname="tests.test_tcl_templates.TestEnhancedTCLGenerator" name="test_project_setup_generation" time="0.002" /><testcase classname="tests.test_tcl_templates.TestEnhancedTCLGenerator" name="test_ip_config_generation" time="0.001" /><testcase classname="tests.test_tcl_templates.TestEnhancedTCLGenerator" name="test_constraints_generation" time="0.002" /><testcase classname="tests.test_tcl_templates.TestEnhancedTCLGenerator" name="test_fallback_mechanisms" time="0.001" /><testcase classname="tests.test_tcl_templates.TestEnhancedTCLGenerator" name="test_template_rendering_failure_fallback" time="0.003"><failure message="assert 'fallback' in '#==============================================================================\n# pcileech firmware build script\n# generated for device 1234:5678\n# board: 75t\n# generated: 2025-06-15 01:42:41\n#==============================================================================\n\n# set up build environment\nset project_name &quot;pcileech_firmware&quot;\nset project_dir &quot;./vivado_project&quot;\nset output_dir &quot;.&quot;\n\n# create project directory\nfile mkdir $project_dir\n\nputs &quot;creating vivado project for 75t...&quot;\nputs &quot;device: 1234:5678 (class: 040300)&quot;\n\n# create project with correct fpga part\ncreate_project $project_name $project_dir -part xc7a75tfgg484-2 -force\n\n# set project properties\nset_property target_language verilog [current_project]\nset_property simulator_language mixed [current_project]\nset_property default_lib xil_defaultlib [current_project]\n\nputs &quot;project setup completed successfully&quot;'&#10; +  where '#==============================================================================\n# pcileech firmware build script\n# generated for device 1234:5678\n# board: 75t\n# generated: 2025-06-15 01:42:41\n#==============================================================================\n\n# set up build environment\nset project_name &quot;pcileech_firmware&quot;\nset project_dir &quot;./vivado_project&quot;\nset output_dir &quot;.&quot;\n\n# create project directory\nfile mkdir $project_dir\n\nputs &quot;creating vivado project for 75t...&quot;\nputs &quot;device: 1234:5678 (class: 040300)&quot;\n\n# create project with correct fpga part\ncreate_project $project_name $project_dir -part xc7a75tfgg484-2 -force\n\n# set project properties\nset_property target_language verilog [current_project]\nset_property simulator_language mixed [current_project]\nset_property default_lib xil_defaultlib [current_project]\n\nputs &quot;project setup completed successfully&quot;' = &lt;built-in method lower of str object at 0x1036526a0&gt;()&#10; +    where &lt;built-in method lower of str object at 0x1036526a0&gt; = '#==============================================================================\n# PCILeech Firmware Build Script\n# Generated for device 1234:5678\n# Board: 75t\n# Generated: 2025-06-15 01:42:41\n#==============================================================================\n\n# Set up build environment\nset project_name &quot;pcileech_firmware&quot;\nset project_dir &quot;./vivado_project&quot;\nset output_dir &quot;.&quot;\n\n# Create project directory\nfile mkdir $project_dir\n\nputs &quot;Creating Vivado project for 75t...&quot;\nputs &quot;Device: 1234:5678 (Class: 040300)&quot;\n\n# Create project with correct FPGA part\ncreate_project $project_name $project_dir -part xc7a75tfgg484-2 -force\n\n# Set project properties\nset_property target_language Verilog [current_project]\nset_property simulator_language Mixed [current_project]\nset_property default_lib xil_defaultlib [current_project]\n\nputs &quot;Project setup completed successfully&quot;'.lower">tests/test_tcl_templates.py:159: in test_template_rendering_failure_fallback
    assert "fallback" in tcl_content.lower()
E   assert 'fallback' in '#==============================================================================\n# pcileech firmware build script\n# generated for device 1234:5678\n# board: 75t\n# generated: 2025-06-15 01:42:41\n#==============================================================================\n\n# set up build environment\nset project_name "pcileech_firmware"\nset project_dir "./vivado_project"\nset output_dir "."\n\n# create project directory\nfile mkdir $project_dir\n\nputs "creating vivado project for 75t..."\nputs "device: 1234:5678 (class: 040300)"\n\n# create project with correct fpga part\ncreate_project $project_name $project_dir -part xc7a75tfgg484-2 -force\n\n# set project properties\nset_property target_language verilog [current_project]\nset_property simulator_language mixed [current_project]\nset_property default_lib xil_defaultlib [current_project]\n\nputs "project setup completed successfully"'
E    +  where '#==============================================================================\n# pcileech firmware build script\n# generated for device 1234:5678\n# board: 75t\n# generated: 2025-06-15 01:42:41\n#==============================================================================\n\n# set up build environment\nset project_name "pcileech_firmware"\nset project_dir "./vivado_project"\nset output_dir "."\n\n# create project directory\nfile mkdir $project_dir\n\nputs "creating vivado project for 75t..."\nputs "device: 1234:5678 (class: 040300)"\n\n# create project with correct fpga part\ncreate_project $project_name $project_dir -part xc7a75tfgg484-2 -force\n\n# set project properties\nset_property target_language verilog [current_project]\nset_property simulator_language mixed [current_project]\nset_property default_lib xil_defaultlib [current_project]\n\nputs "project setup completed successfully"' = &lt;built-in method lower of str object at 0x1036526a0&gt;()
E    +    where &lt;built-in method lower of str object at 0x1036526a0&gt; = '#==============================================================================\n# PCILeech Firmware Build Script\n# Generated for device 1234:5678\n# Board: 75t\n# Generated: 2025-06-15 01:42:41\n#==============================================================================\n\n# Set up build environment\nset project_name "pcileech_firmware"\nset project_dir "./vivado_project"\nset output_dir "."\n\n# Create project directory\nfile mkdir $project_dir\n\nputs "Creating Vivado project for 75t..."\nputs "Device: 1234:5678 (Class: 040300)"\n\n# Create project with correct FPGA part\ncreate_project $project_name $project_dir -part xc7a75tfgg484-2 -force\n\n# Set project properties\nset_property target_language Verilog [current_project]\nset_property simulator_language Mixed [current_project]\nset_property default_lib xil_defaultlib [current_project]\n\nputs "Project setup completed successfully"'.lower</failure></testcase><testcase classname="tests.test_tcl_templates.TestEnhancedTCLGenerator" name="test_all_build_stages" time="0.008" /><testcase classname="tests.test_tcl_templates.TestEnhancedTCLGenerator" name="test_different_boards" time="0.006" /><testcase classname="tests.test_tcl_templates.TestEnhancedTCLGenerator" name="test_template_vs_fallback_comparison" time="0.002" /><testcase classname="tests.test_template_renderer.TestTemplateRendererInitialization" name="test_init_with_custom_directory" time="0.001" /><testcase classname="tests.test_template_renderer.TestTemplateRendererInitialization" name="test_init_with_default_directory" time="0.001" /><testcase classname="tests.test_template_renderer.TestTemplateRendererInitialization" name="test_init_creates_directory_if_missing" time="0.001" /><testcase classname="tests.test_template_renderer.TestTemplateRendererInitialization" name="test_jinja_environment_configuration" time="0.001" /><testcase classname="tests.test_template_renderer.TestCustomFilters" name="test_hex_filter_default_width" time="0.002" /><testcase classname="tests.test_template_renderer.TestCustomFilters" name="test_hex_filter_custom_width" time="0.002" /><testcase classname="tests.test_template_renderer.TestCustomFilters" name="test_tcl_escape_filter" time="0.002" /><testcase classname="tests.test_template_renderer.TestCustomFilters" name="test_tcl_list_filter" time="0.003" /><testcase classname="tests.test_template_renderer.TestCustomFilters" name="test_filters_in_template_file" time="0.003" /><testcase classname="tests.test_template_renderer.TestTemplateRendering" name="test_render_template_success" time="0.001" /><testcase classname="tests.test_template_renderer.TestTemplateRendering" name="test_render_template_missing_file" time="0.001" /><testcase classname="tests.test_template_renderer.TestTemplateRendering" name="test_render_template_syntax_error" time="0.002" /><testcase classname="tests.test_template_renderer.TestTemplateRendering" name="test_render_string_success" time="0.002" /><testcase classname="tests.test_template_renderer.TestTemplateRendering" name="test_render_string_syntax_error" time="0.001" /><testcase classname="tests.test_template_renderer.TestTemplateRendering" name="test_render_string_missing_variable" time="0.002" /><testcase classname="tests.test_template_renderer.TestTemplateRendering" name="test_render_template_complex_context" time="0.002" /><testcase classname="tests.test_template_renderer.TestTemplateUtilities" name="test_template_exists_true" time="0.001" /><testcase classname="tests.test_template_renderer.TestTemplateUtilities" name="test_template_exists_false" time="0.001" /><testcase classname="tests.test_template_renderer.TestTemplateUtilities" name="test_list_templates_default_pattern" time="0.002" /><testcase classname="tests.test_template_renderer.TestTemplateUtilities" name="test_list_templates_custom_pattern" time="0.002" /><testcase classname="tests.test_template_renderer.TestTemplateUtilities" name="test_get_template_path" time="0.002" /><testcase classname="tests.test_template_renderer.TestErrorHandling" name="test_jinja2_import_error" time="0.001"><failure message="AssertionError: assert 'Jinja2 is required for template rendering' in 'Jinja2 not found'&#10; +  where 'Jinja2 not found' = str(ImportError('Jinja2 not found'))&#10; +    where ImportError('Jinja2 not found') = &lt;ExceptionInfo ImportError('Jinja2 not found') tblen=5&gt;.value">tests/test_template_renderer.py:288: in test_jinja2_import_error
    assert "Jinja2 is required for template rendering" in str(exc_info.value)
E   AssertionError: assert 'Jinja2 is required for template rendering' in 'Jinja2 not found'
E    +  where 'Jinja2 not found' = str(ImportError('Jinja2 not found'))
E    +    where ImportError('Jinja2 not found') = &lt;ExceptionInfo ImportError('Jinja2 not found') tblen=5&gt;.value</failure></testcase><testcase classname="tests.test_template_renderer.TestErrorHandling" name="test_template_directory_permission_error" time="0.001" /><testcase classname="tests.test_template_renderer.TestErrorHandling" name="test_render_with_none_context" time="0.002" /><testcase classname="tests.test_template_renderer.TestErrorHandling" name="test_render_with_empty_context" time="0.002" /><testcase classname="tests.test_template_renderer.TestConvenienceFunction" name="test_render_tcl_template_success" time="0.002" /><testcase classname="tests.test_template_renderer.TestConvenienceFunction" name="test_render_tcl_template_default_dir" time="0.001" /><testcase classname="tests.test_template_renderer.TestTemplateRenderErrorException" name="test_template_render_error_creation" time="0.001" /><testcase classname="tests.test_template_renderer.TestTemplateRenderErrorException" name="test_template_render_error_with_cause" time="0.001" /><testcase classname="tests.test_template_renderer.TestIntegrationScenarios" name="test_tcl_project_setup_template" time="0.003" /><testcase classname="tests.test_template_renderer.TestIntegrationScenarios" name="test_multiple_template_rendering" time="0.002" /><testcase classname="tests.test_template_renderer.TestIntegrationScenarios" name="test_template_with_conditional_logic" time="0.003" /><testcase classname="tests.test_tui_config_fixes.TestConfigurationFixes" name="test_default_configuration_has_donor_dump_enabled" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigurationFixes" name="test_config_manager_persistence" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigurationFixes" name="test_configuration_to_cli_args_with_donor_dump" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigurationFixes" name="test_configuration_to_cli_args_without_donor_dump" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigurationFixes" name="test_configuration_feature_summary_with_donor_dump" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigurationFixes" name="test_configuration_feature_summary_without_donor_dump" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigurationFixes" name="test_configuration_copy_preserves_donor_dump_settings" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigurationFixes" name="test_configuration_validation_with_valid_settings" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigurationFixes" name="test_configuration_validation_with_invalid_board_type" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigurationFixes" name="test_configuration_validation_with_invalid_device_type" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigurationFixes" name="test_configuration_validation_with_invalid_profile_duration" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestTUIConfigurationIntegration" name="test_tui_configuration_update_calls_config_manager" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_config_manager_initialization_with_error" time="0.001"><failure message="AttributeError: 'TestConfigManagerEnhanced' object has no attribute 'temp_dir'">tests/test_tui_config_fixes.py:212: in test_config_manager_initialization_with_error
    mock_home.return_value = Path(self.temp_dir)
E   AttributeError: 'TestConfigManagerEnhanced' object has no attribute 'temp_dir'</failure></testcase><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_ensure_config_directory_success" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_ensure_config_directory_windows" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_ensure_config_directory_permission_error" time="0.001"><failure message="AttributeError: 'ExceptionInfo' object has no attribute 'exception'">tests/test_tui_config_fixes.py:266: in test_ensure_config_directory_permission_error
    assert "Insufficient permissions" in str(context.exception)
E   AttributeError: 'ExceptionInfo' object has no attribute 'exception'</failure></testcase><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_save_profile_success" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_save_profile_permission_error" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_sanitize_filename" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_load_profile_success" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_load_profile_not_found" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_list_profiles_success" time="0.002" /><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_delete_profile_success" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_delete_profile_not_found" time="0.001" /><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_full_profile_lifecycle" time="0.001"><failure message="AttributeError: 'TestConfigManagerEnhanced' object has no attribute 'temp_dir'">tests/test_tui_config_fixes.py:403: in test_full_profile_lifecycle
    mock_home.return_value = Path(self.temp_dir)
E   AttributeError: 'TestConfigManagerEnhanced' object has no attribute 'temp_dir'</failure></testcase><testcase classname="tests.test_tui_config_fixes.TestConfigManagerEnhanced" name="test_donor_dump_toggle_functionality" time="0.001" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEdgeCases" name="test_bind_to_vfio_already_bound" time="0.001"><failure message="RuntimeError: VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_vfio_binding.py:30: in test_bind_to_vfio_already_bound
    generate.bind_to_vfio("0000:03:00.0", "8086", "1533", "vfio-pci")
generate.py:350: in bind_to_vfio
    check_linux_requirement("VFIO device binding")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_vfio_binding.TestVFIOBindingEdgeCases" name="test_bind_to_vfio_bind_error_but_already_bound" time="0.001"><failure message="RuntimeError: VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.">tests/test_vfio_binding.py:70: in test_bind_to_vfio_bind_error_but_already_bound
    generate.bind_to_vfio("0000:03:00.0", "8086", "1533", original_driver)
generate.py:350: in bind_to_vfio
    check_linux_requirement("VFIO device binding")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.</failure></testcase><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_validate_vfio_prerequisites_success" time="0.001" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_validate_vfio_prerequisites_missing_modules" time="0.001" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_validate_vfio_prerequisites_missing_driver" time="0.001" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_check_device_in_use" time="0.001" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_check_device_not_in_use" time="0.001" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_wait_for_device_state_success" time="0.001" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_wait_for_device_state_timeout" time="0.001" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_bind_to_vfio_enhanced_success" time="0.002" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_bind_to_vfio_device_busy_retry" time="2.016"><failure message="RuntimeError: Unexpected error during vfio binding: Failed to register device ID: [Errno 2] No such file or directory: '/sys/bus/pci/drivers/vfio-pci/new_id'">generate.py:420: in bind_to_vfio
    with open(new_id_path, "w") as f:
E   FileNotFoundError: [Errno 2] No such file or directory: '/sys/bus/pci/drivers/vfio-pci/new_id'

During handling of the above exception, another exception occurred:
generate.py:448: in bind_to_vfio
    raise RuntimeError(f"Failed to register device ID: {e}")
E   RuntimeError: Failed to register device ID: [Errno 2] No such file or directory: '/sys/bus/pci/drivers/vfio-pci/new_id'

The above exception was the direct cause of the following exception:
tests/test_vfio_binding.py:257: in test_bind_to_vfio_device_busy_retry
    generate.bind_to_vfio("0000:03:00.0", "8086", "1533", "e1000e")
generate.py:587: in bind_to_vfio
    raise RuntimeError(error_msg) from e
E   RuntimeError: Unexpected error during vfio binding: Failed to register device ID: [Errno 2] No such file or directory: '/sys/bus/pci/drivers/vfio-pci/new_id'</failure></testcase><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_bind_to_vfio_invalid_vendor_id" time="0.001" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_bind_to_vfio_invalid_device_id" time="0.001" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_bind_to_vfio_device_not_found" time="0.002" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_restore_original_driver_enhanced_success" time="0.002"><failure message="AssertionError: Calls not found.&#10;Expected: [call('echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind', timeout=10),&#10; call('echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind', timeout=10)]&#10;  Actual: []&#10;&#10;pytest introspection follows:&#10;&#10;Args:&#10;assert () == ('echo 0000:0...-pci/unbind',)&#10;  &#10;  Right contains one more item: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mecho 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[92m+ ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m- (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m-     'echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m- )#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;Kwargs:&#10;assert {} == {'timeout': 10}&#10;  &#10;  Right contains 1 more item:&#10;  #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33mtimeout#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94m10#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[92m+ {}#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m- {#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m-     'timeout': 10,#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m- }#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;Args:&#10;assert () == ('echo 0000:0...e1000e/bind',)&#10;  &#10;  Right contains one more item: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mecho 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[92m+ ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m- (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m-     'echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m- )#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;Kwargs:&#10;assert {} == {'timeout': 10}&#10;  &#10;  Right contains 1 more item:&#10;  #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33mtimeout#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94m10#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[92m+ {}#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m- {#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m-     'timeout': 10,#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[91m- }#x1B[39;49;00m#x1B[90m#x1B[39;49;00m">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:1014: in assert_has_calls
    raise AssertionError(
E   AssertionError: Calls not found.
E   Expected: [call('echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind', timeout=10),
E    call('echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind', timeout=10)]
E     Actual: []

During handling of the above exception, another exception occurred:
tests/test_vfio_binding.py:314: in test_restore_original_driver_enhanced_success
    mock_run.assert_has_calls(expected_calls)
E   AssertionError: Calls not found.
E   Expected: [call('echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind', timeout=10),
E    call('echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind', timeout=10)]
E     Actual: []
E   
E   pytest introspection follows:
E   
E   Args:
E   assert () == ('echo 0000:0...-pci/unbind',)
E     
E     Right contains one more item: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mecho 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[92m+ ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m- (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m-     'echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/vfio-pci/unbind',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m- )#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E   Kwargs:
E   assert {} == {'timeout': 10}
E     
E     Right contains 1 more item:
E     #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33mtimeout#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94m10#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[92m+ {}#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m- {#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m-     'timeout': 10,#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m- }#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E   Args:
E   assert () == ('echo 0000:0...e1000e/bind',)
E     
E     Right contains one more item: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mecho 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[92m+ ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m- (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m-     'echo 0000:03:00.0 &gt; /sys/bus/pci/drivers/e1000e/bind',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m- )#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E   Kwargs:
E   assert {} == {'timeout': 10}
E     
E     Right contains 1 more item:
E     #x1B[0m{#x1B[33m'#x1B[39;49;00m#x1B[33mtimeout#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m: #x1B[94m10#x1B[39;49;00m}#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[92m+ {}#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m- {#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m-     'timeout': 10,#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[91m- }#x1B[39;49;00m#x1B[90m#x1B[39;49;00m</failure></testcase><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_restore_original_driver_device_disappeared" time="0.001" /><testcase classname="tests.test_vfio_binding.TestVFIOBindingEnhanced" name="test_restore_original_driver_retry_logic" time="0.001"><failure message="AssertionError: assert 0 == 3&#10; +  where 0 = &lt;MagicMock name='run_command' id='4421614096'&gt;.call_count">tests/test_vfio_binding.py:371: in test_restore_original_driver_retry_logic
    assert mock_run.call_count == 3
E   AssertionError: assert 0 == 3
E    +  where 0 = &lt;MagicMock name='run_command' id='4421614096'&gt;.call_count</failure></testcase><testcase classname="tests.test_vfio_binding.TestVFIOBindingStressTests" name="test_bind_to_vfio_maximum_retries" time="0.002"><failure message="AssertionError: Regex pattern did not match.&#10; Regex: 'Failed to bind to vfio-pci after .* attempts'&#10; Input: 'VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.'">tests/test_vfio_binding.py:420: in test_bind_to_vfio_maximum_retries
    generate.bind_to_vfio("0000:03:00.0", "8086", "1533", "e1000e")
generate.py:350: in bind_to_vfio
    check_linux_requirement("VFIO device binding")
generate.py:117: in check_linux_requirement
    raise RuntimeError(
E   RuntimeError: VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.

During handling of the above exception, another exception occurred:
tests/test_vfio_binding.py:417: in test_bind_to_vfio_maximum_retries
    with pytest.raises(
E   AssertionError: Regex pattern did not match.
E    Regex: 'Failed to bind to vfio-pci after .* attempts'
E    Input: 'VFIO device binding requires Linux. Current platform: Darwin. Please run this on a Linux system with VFIO support.'</failure></testcase><testcase classname="tests.test_vfio_binding.TestVFIOBindingStressTests" name="test_restore_original_driver_maximum_retries" time="0.002"><failure message="Failed: DID NOT RAISE &lt;class 'RuntimeError'&gt;">tests/test_vfio_binding.py:452: in test_restore_original_driver_maximum_retries
    with pytest.raises(
E   Failed: DID NOT RAISE &lt;class 'RuntimeError'&gt;</failure></testcase><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_find_vivado_in_path" time="0.001"><failure message="assert None is not None">tests/test_vivado_utils.py:42: in test_find_vivado_in_path
    assert result is not None
E   assert None is not None</failure></testcase><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_find_vivado_in_common_locations" time="0.001"><failure message="assert None is not None">tests/test_vivado_utils.py:80: in test_find_vivado_in_common_locations
    assert result is not None
E   assert None is not None</failure></testcase><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_find_vivado_from_environment_variable" time="0.001"><failure message="assert None is not None">tests/test_vivado_utils.py:115: in test_find_vivado_from_environment_variable
    assert result is not None
E   assert None is not None</failure></testcase><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_vivado_not_found" time="0.001" /><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_get_vivado_version_from_output" time="0.005"><failure message="AssertionError: assert 'unknown' == '2022.2'&#10;  &#10;  - 2022.2&#10;  + unknown">tests/test_vivado_utils.py:166: in test_get_vivado_version_from_output
    assert version == "2022.2"
E   AssertionError: assert 'unknown' == '2022.2'
E     
E     - 2022.2
E     + unknown</failure></testcase><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_run_vivado_command" time="0.001" /><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_run_vivado_command_with_tcl" time="0.001" /><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_run_vivado_command_vivado_not_found" time="0.002" /><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_find_vivado_in_tools_xilinx_version_pattern" time="0.001"><failure message="assert None is not None">tests/test_vivado_utils.py:280: in test_find_vivado_in_tools_xilinx_version_pattern
    assert result is not None
E   assert None is not None</failure></testcase><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_find_vivado_tools_pattern_permission_error" time="0.001" /><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_find_vivado_tools_pattern_multiple_versions" time="0.001"><failure message="assert None is not None">tests/test_vivado_utils.py:356: in test_find_vivado_tools_pattern_multiple_versions
    assert result is not None
E   assert None is not None</failure></testcase><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_get_vivado_executable" time="0.001" /><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_run_vivado_command_fallback_to_path" time="0.001" /><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_run_vivado_command_use_discovered_path_false" time="0.001"><failure message="TypeError: run_vivado_command() got an unexpected keyword argument 'use_discovered_path'. Did you mean 'use_discovered'?">tests/test_vivado_utils.py:417: in test_run_vivado_command_use_discovered_path_false
    run_vivado_command("-mode batch", use_discovered_path=False)
E   TypeError: run_vivado_command() got an unexpected keyword argument 'use_discovered_path'. Did you mean 'use_discovered'?</failure></testcase><testcase classname="tests.test_vivado_utils.TestVivadoDetection" name="test_run_vivado_command_both_methods_fail" time="0.001"><failure message="AssertionError: assert 'Vivado not found' in 'Vivado executable not found. Ensure it is in PATH or set XILINX_VIVADO.'">tests/test_vivado_utils.py:437: in test_run_vivado_command_both_methods_fail
    assert "Vivado not found" in error_msg
E   AssertionError: assert 'Vivado not found' in 'Vivado executable not found. Ensure it is in PATH or set XILINX_VIVADO.'</failure></testcase><testcase classname="tests.tui.test_device_indicators.TestDeviceIndicators" name="test_device_properties_initialization" time="0.001" /><testcase classname="tests.tui.test_device_indicators.TestDeviceIndicators" name="test_validity_indicator" time="0.001"><failure message="TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?">tests/tui/test_device_indicators.py:56: in test_validity_indicator
    valid_device = self._create_test_device(is_valid=True)
tests/tui/test_device_indicators.py:271: in _create_test_device
    return PCIDevice(**defaults)
E   TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?</failure></testcase><testcase classname="tests.tui.test_device_indicators.TestDeviceIndicators" name="test_driver_indicator" time="0.001"><failure message="TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?">tests/tui/test_device_indicators.py:66: in test_driver_indicator
    no_driver_device = self._create_test_device(has_driver=False)
tests/tui/test_device_indicators.py:271: in _create_test_device
    return PCIDevice(**defaults)
E   TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?</failure></testcase><testcase classname="tests.tui.test_device_indicators.TestDeviceIndicators" name="test_vfio_indicator" time="0.001"><failure message="TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?">tests/tui/test_device_indicators.py:80: in test_vfio_indicator
    vfio_device = self._create_test_device(vfio_compatible=True)
tests/tui/test_device_indicators.py:271: in _create_test_device
    return PCIDevice(**defaults)
E   TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?</failure></testcase><testcase classname="tests.tui.test_device_indicators.TestDeviceIndicators" name="test_iommu_indicator" time="0.001"><failure message="TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?">tests/tui/test_device_indicators.py:90: in test_iommu_indicator
    iommu_device = self._create_test_device(iommu_enabled=True)
tests/tui/test_device_indicators.py:271: in _create_test_device
    return PCIDevice(**defaults)
E   TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?</failure></testcase><testcase classname="tests.tui.test_device_indicators.TestDeviceIndicators" name="test_ready_indicator" time="0.001"><failure message="TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?">tests/tui/test_device_indicators.py:100: in test_ready_indicator
    ready_device = self._create_test_device(
tests/tui/test_device_indicators.py:271: in _create_test_device
    return PCIDevice(**defaults)
E   TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?</failure></testcase><testcase classname="tests.tui.test_device_indicators.TestDeviceIndicators" name="test_compact_status_display" time="0.001"><failure message="TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?">tests/tui/test_device_indicators.py:128: in test_compact_status_display
    device = self._create_test_device(
tests/tui/test_device_indicators.py:271: in _create_test_device
    return PCIDevice(**defaults)
E   TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?</failure></testcase><testcase classname="tests.tui.test_device_indicators.TestDeviceIndicators" name="test_enhanced_suitability_scoring" time="0.001" /><testcase classname="tests.tui.test_device_indicators.TestDeviceIndicators" name="test_detailed_status_information" time="0.001"><failure message="TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?">tests/tui/test_device_indicators.py:183: in test_detailed_status_information
    device = self._create_test_device(
tests/tui/test_device_indicators.py:271: in _create_test_device
    return PCIDevice(**defaults)
E   TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?</failure></testcase><testcase classname="tests.tui.test_device_indicators.TestDeviceIndicators" name="test_error_handling_edge_cases" time="0.001" /><testcase classname="tests.tui.test_device_indicators.TestDeviceManagerEnhancements" name="test_device_validity_check" time="0.002" /><testcase classname="tests.tui.test_device_indicators.TestDeviceManagerEnhancements" name="test_driver_status_check" time="0.001" /><testcase classname="tests.tui.test_device_indicators.TestDeviceManagerEnhancements" name="test_vfio_compatibility_check" time="0.002" /><testcase classname="tests.tui.test_device_indicators.TestDeviceManagerEnhancements" name="test_iommu_status_check" time="0.001" /><testcase classname="tests.tui.test_device_indicators.TestDeviceManagerEnhancements" name="test_enhanced_device_info_creation" time="0.002" /><testcase classname="tests.tui.test_device_indicators.TestTUIIntegration" name="test_device_table_columns" time="0.001" /><testcase classname="tests.tui.test_device_indicators.TestTUIIntegration" name="test_device_table_row_data" time="0.001" /><testcase classname="tests.tui.test_device_indicators.TestSpecificDeviceScenarios" name="test_valid_device_with_vfio" time="0.001" /><testcase classname="tests.tui.test_device_indicators.TestSpecificDeviceScenarios" name="test_device_with_bound_driver" time="0.001" /><testcase classname="tests.tui.test_device_indicators.TestSpecificDeviceScenarios" name="test_invalid_device" time="0.001" /><testcase classname="tests.tui.test_device_indicators.TestSpecificDeviceScenarios" name="test_iommu_disabled_device" time="0.001" /><testcase classname="tests.tui.test_device_indicators.TestSpecificDeviceScenarios" name="test_vfio_incompatible_device" time="0.001" /><testcase classname="tests.tui.test_progress.TestBuildStage" name="test_build_stage_values" time="0.001" /><testcase classname="tests.tui.test_progress.TestBuildProgress" name="test_build_progress_init" time="0.001" /><testcase classname="tests.tui.test_progress.TestBuildProgress" name="test_completed_stages_property" time="0.001" /><testcase classname="tests.tui.test_progress.TestBuildProgress" name="test_total_stages_property" time="0.001" /><testcase classname="tests.tui.test_progress.TestBuildProgress" name="test_overall_progress_property" time="0.001" /><testcase classname="tests.tui.test_progress.TestBuildProgress" name="test_status_text_property" time="0.001" /><testcase classname="tests.tui.test_progress.TestBuildProgress" name="test_progress_bar_text_property" time="0.001" /><testcase classname="tests.tui.test_progress.TestBuildProgress" name="test_add_warning_and_error" time="0.001" /><testcase classname="tests.tui.test_progress.TestBuildProgress" name="test_update_resource_usage" time="0.001" /><testcase classname="tests.tui.test_progress.TestBuildProgress" name="test_to_dict" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestDeviceManager" name="test_device_manager_init" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestDeviceManager" name="test_vendor_database_loading" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestDeviceManager" name="test_scan_devices_success" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestDeviceManager" name="test_scan_devices_failure" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestDeviceManager" name="test_extract_device_name" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestDeviceManager" name="test_assess_device_suitability" time="0.001"><failure message="assert 0.7999999999999999 &gt; 0.8">tests/tui/test_tui_core.py:134: in test_assess_device_suitability
    assert score &gt; 0.8
E   assert 0.7999999999999999 &gt; 0.8</failure></testcase><testcase classname="tests.tui.test_tui_core.TestDeviceManager" name="test_cached_operations" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestConfigManager" name="test_config_manager_init" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestConfigManager" name="test_current_config_management" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestConfigManager" name="test_create_default_profiles" time="0.002" /><testcase classname="tests.tui.test_tui_core.TestConfigManager" name="test_save_and_load_profile" time="0.001"><failure message="AssertionError: assert False&#10; +  where False = exists()&#10; +    where exists = PosixPath('/var/folders/pz/zdq1ptxs0h3700ssftp1vlch0000gn/T/tmpu3gp6q7j/Test_Profile.json').exists">tests/tui/test_tui_core.py:263: in test_save_and_load_profile
    assert profile_file.exists()
E   AssertionError: assert False
E    +  where False = exists()
E    +    where exists = PosixPath('/var/folders/pz/zdq1ptxs0h3700ssftp1vlch0000gn/T/tmpu3gp6q7j/Test_Profile.json').exists</failure></testcase><testcase classname="tests.tui.test_tui_core.TestConfigManager" name="test_profile_operations" time="0.002" /><testcase classname="tests.tui.test_tui_core.TestConfigManager" name="test_list_profiles" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestConfigManager" name="test_delete_profile" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestConfigManager" name="test_config_validation" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestBuildOrchestrator" name="test_build_orchestrator_init" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestBuildOrchestrator" name="test_progress_management" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestBuildOrchestrator" name="test_start_build_success" time="1.480" /><testcase classname="tests.tui.test_tui_core.TestBuildOrchestrator" name="test_build_already_running" time="0.005" /><testcase classname="tests.tui.test_tui_core.TestBuildOrchestrator" name="test_cancel_build" time="2.006" /><testcase classname="tests.tui.test_tui_core.TestBuildOrchestrator" name="test_ensure_git_repo" time="0.010"><failure message="AssertionError: Expected '_run_command' to have been called once. Called 2 times.&#10;Calls: [call('git --version'),&#10; call('git clone https://github.com/ufrisk/pcileech-fpga.git /Users/ramseymcgrath/.cache/pcileech-fw-generator/repos/pcileech-fpga')].&#10;&#10;pytest introspection follows:&#10;&#10;Args:&#10;assert ('git clone h...ileech-fpga',) == ()&#10;  &#10;  Left contains one more item: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mgit clone https://github.com/ufrisk/pcileech-fpga.git /Users/ramseymcgrath/.cache/pcileech-fw-generator/repos/pcileech-fpga#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  &#10;  Full diff:&#10;  #x1B[0m#x1B[91m- ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+     'git clone https://github.com/ufrisk/pcileech-fpga.git '#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+     '/Users/ramseymcgrath/.cache/pcileech-fw-generator/repos/pcileech-fpga',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ )#x1B[39;49;00m#x1B[90m#x1B[39;49;00m">/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py:956: in assert_called_once
    raise AssertionError(msg)
E   AssertionError: Expected '_run_command' to have been called once. Called 2 times.
E   Calls: [call('git --version'),
E    call('git clone https://github.com/ufrisk/pcileech-fpga.git /Users/ramseymcgrath/.cache/pcileech-fw-generator/repos/pcileech-fpga')].

During handling of the above exception, another exception occurred:
tests/tui/test_tui_core.py:522: in test_ensure_git_repo
    mock_run_command.assert_called_once()
E   AssertionError: Expected '_run_command' to have been called once. Called 2 times.
E   Calls: [call('git --version'),
E    call('git clone https://github.com/ufrisk/pcileech-fpga.git /Users/ramseymcgrath/.cache/pcileech-fw-generator/repos/pcileech-fpga')].
E   
E   pytest introspection follows:
E   
E   Args:
E   assert ('git clone h...ileech-fpga',) == ()
E     
E     Left contains one more item: #x1B[0m#x1B[33m'#x1B[39;49;00m#x1B[33mgit clone https://github.com/ufrisk/pcileech-fpga.git /Users/ramseymcgrath/.cache/pcileech-fw-generator/repos/pcileech-fpga#x1B[39;49;00m#x1B[33m'#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     
E     Full diff:
E     #x1B[0m#x1B[91m- ()#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ (#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+     'git clone https://github.com/ufrisk/pcileech-fpga.git '#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+     '/Users/ramseymcgrath/.cache/pcileech-fw-generator/repos/pcileech-fpga',#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ )#x1B[39;49;00m#x1B[90m#x1B[39;49;00m</failure></testcase><testcase classname="tests.tui.test_tui_core.TestStatusMonitor" name="test_status_monitor_init" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestStatusMonitor" name="test_check_podman_status" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestStatusMonitor" name="test_check_vivado_status" time="0.002" /><testcase classname="tests.tui.test_tui_core.TestStatusMonitor" name="test_get_disk_space" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestStatusMonitor" name="test_check_root_access" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestStatusMonitor" name="test_get_system_status" time="0.002" /><testcase classname="tests.tui.test_tui_core.TestStatusMonitor" name="test_monitoring_control" time="0.001" /><testcase classname="tests.tui.test_tui_core.TestStatusMonitor" name="test_status_summary" time="0.001" /><testcase classname="tests.tui.test_tui_main.TestConfigurationDialog" name="test_configuration_dialog_init" time="0.001" /><testcase classname="tests.tui.test_tui_main.TestConfigurationDialog" name="test_create_config_from_form" time="0.003" /><testcase classname="tests.tui.test_tui_main.TestConfigurationDialog" name="test_populate_form" time="0.003" /><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_tui_app_init" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:148: in test_tui_app_init
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_app_properties" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:166: in test_app_properties
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_initialize_app" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:184: in test_initialize_app
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_scan_devices" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:203: in test_scan_devices
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_update_device_table" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:241: in test_update_device_table
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_update_config_display" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:275: in test_update_config_display
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_update_status_display" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:310: in test_update_status_display
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_update_build_progress" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:349: in test_update_build_progress
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_button_press_handlers" time="0.002"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:391: in test_button_press_handlers
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_data_table_row_selection" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:427: in test_data_table_row_selection
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_start_build" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:466: in test_start_build
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_stop_build" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:503: in test_stop_build
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_build_progress_callback" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:516: in test_build_progress_callback
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_reactive_watchers" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:535: in test_reactive_watchers
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_build_progress_watcher" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:574: in test_build_progress_watcher
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_open_configuration_dialog" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:592: in test_open_configuration_dialog
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_main.TestPCILeechTUI" name="test_monitor_system_status" time="0.001"><failure message="textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.">tests/tui/test_tui_main.py:608: in test_monitor_system_status
    app = PCILeechTUI()
src/tui/main.py:482: in __init__
    self.current_config = self.config_manager.get_current_config()
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:345: in __set__
    self._set(obj, value)
/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/textual/reactive.py:291: in _set
    raise ReactiveError(
E   textual.reactive.ReactiveError: Node is missing data; Check you are calling super().__init__(...) in the PCILeechTUI() constructor, before setting reactives.</failure></testcase><testcase classname="tests.tui.test_tui_models.TestBuildConfiguration" name="test_default_configuration" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildConfiguration" name="test_configuration_validation" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildConfiguration" name="test_is_advanced_property" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildConfiguration" name="test_feature_summary" time="0.001"><failure message="AssertionError: assert 'Donor Device Analysis' == 'Basic Configuration'&#10;  &#10;  - Basic Configuration&#10;  + Donor Device Analysis">tests/tui/test_tui_models.py:89: in test_feature_summary
    assert config.feature_summary == "Basic Configuration"
E   AssertionError: assert 'Donor Device Analysis' == 'Basic Configuration'
E     
E     - Basic Configuration
E     + Donor Device Analysis</failure></testcase><testcase classname="tests.tui.test_tui_models.TestBuildConfiguration" name="test_to_cli_args" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildConfiguration" name="test_serialization" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildConfiguration" name="test_file_operations" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildConfiguration" name="test_copy" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestPCIDevice" name="test_device_creation" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestPCIDevice" name="test_display_name" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestPCIDevice" name="test_is_suitable" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestPCIDevice" name="test_status_indicator" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestPCIDevice" name="test_serialization" time="0.001"><failure message="TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?">tests/tui/test_tui_models.py:323: in test_serialization
    restored = PCIDevice.from_dict(data)
src/tui/models/device.py:136: in from_dict
    return cls(**data)
E   TypeError: PCIDevice.__init__() got an unexpected keyword argument 'bd'. Did you mean 'bdf'?</failure></testcase><testcase classname="tests.tui.test_tui_models.TestTUIError" name="test_error_creation" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestTUIError" name="test_severity_properties" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestTUIError" name="test_add_action" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestTUIError" name="test_serialization" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestErrorTemplates" name="test_vfio_binding_failed" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestErrorTemplates" name="test_container_not_found" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestErrorTemplates" name="test_insufficient_permissions" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestErrorTemplates" name="test_build_failed" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestErrorTemplates" name="test_device_not_suitable" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildProgress" name="test_progress_creation" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildProgress" name="test_stage_tracking" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildProgress" name="test_overall_progress" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildProgress" name="test_status_text" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildProgress" name="test_progress_bar_text" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildProgress" name="test_warning_and_error_management" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildProgress" name="test_resource_usage_update" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildProgress" name="test_serialization" time="0.001" /><testcase classname="tests.tui.test_tui_models.TestBuildStage" name="test_build_stages" time="0.001" /></testsuite></testsuites>